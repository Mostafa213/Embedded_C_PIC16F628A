

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Apr 25 01:55:20 2023

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F628A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   116                           TMR2 equ 011h ;# 
   117  0011                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   118                           T2CON equ 012h ;# 
   119  0012                     # 605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   120                           CCPR1 equ 015h ;# 
   121  0015                     # 612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   122                           CCPR1L equ 015h ;# 
   123  0015                     # 619 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   124                           CCPR1H equ 016h ;# 
   125  0016                     # 626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   126                           CCP1CON equ 017h ;# 
   127  0017                     # 684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   128                           RCSTA equ 018h ;# 
   129  0018                     # 755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   130                           TXREG equ 019h ;# 
   131  0019                     # 762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   132                           RCREG equ 01Ah ;# 
   133  001A                     # 769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   134                           CMCON equ 01Fh ;# 
   135  001F                     # 839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   136                           OPTION_REG equ 081h ;# 
   137  0081                     # 909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   138                           TRISA equ 085h ;# 
   139  0085                     # 971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   140                           TRISB equ 086h ;# 
   141  0086                     # 1033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   142                           PIE1 equ 08Ch ;# 
   143  008C                     # 1090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   144                           PCON equ 08Eh ;# 
   145  008E                     # 1139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   146                           PR2 equ 092h ;# 
   147  0092                     # 1146 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   148                           TXSTA equ 098h ;# 
   149  0098                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   150                           SPBRG equ 099h ;# 
   151  0099                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   152                           EEDATA equ 09Ah ;# 
   153  009A                     # 1217 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   154                           EEADR equ 09Bh ;# 
   155  009B                     # 1224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   156                           EECON1 equ 09Ch ;# 
   157  009C                     # 1262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   158                           EECON2 equ 09Dh ;# 
   159  009D                     # 1269 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   160                           VRCON equ 09Fh ;# 
   161  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   162                           INDF equ 00h ;# 
   163  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   164                           TMR0 equ 01h ;# 
   165  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   166                           PCL equ 02h ;# 
   167  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   168                           STATUS equ 03h ;# 
   169  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   170                           FSR equ 04h ;# 
   171  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   172                           PORTA equ 05h ;# 
   173  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   174                           PORTB equ 06h ;# 
   175  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   176                           PCLATH equ 0Ah ;# 
   177  000A                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   178                           INTCON equ 0Bh ;# 
   179  000B                     # 390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   180                           PIR1 equ 0Ch ;# 
   181  000C                     # 447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   182                           TMR1 equ 0Eh ;# 
   183  000E                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   184                           TMR1L equ 0Eh ;# 
   185  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   186                           TMR1H equ 0Fh ;# 
   187  000F                     # 468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   188                           T1CON equ 010h ;# 
   189  0010                     # 527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   190                           TMR2 equ 011h ;# 
   191  0011                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   192                           T2CON equ 012h ;# 
   193  0012                     # 605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   194                           CCPR1 equ 015h ;# 
   195  0015                     # 612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   196                           CCPR1L equ 015h ;# 
   197  0015                     # 619 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   198                           CCPR1H equ 016h ;# 
   199  0016                     # 626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   200                           CCP1CON equ 017h ;# 
   201  0017                     # 684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   202                           RCSTA equ 018h ;# 
   203  0018                     # 755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   204                           TXREG equ 019h ;# 
   205  0019                     # 762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   206                           RCREG equ 01Ah ;# 
   207  001A                     # 769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   208                           CMCON equ 01Fh ;# 
   209  001F                     # 839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   210                           OPTION_REG equ 081h ;# 
   211  0081                     # 909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   212                           TRISA equ 085h ;# 
   213  0085                     # 971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   214                           TRISB equ 086h ;# 
   215  0086                     # 1033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   216                           PIE1 equ 08Ch ;# 
   217  008C                     # 1090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   218                           PCON equ 08Eh ;# 
   219  008E                     # 1139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   220                           PR2 equ 092h ;# 
   221  0092                     # 1146 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   222                           TXSTA equ 098h ;# 
   223  0098                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   224                           SPBRG equ 099h ;# 
   225  0099                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   226                           EEDATA equ 09Ah ;# 
   227  009A                     # 1217 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   228                           EEADR equ 09Bh ;# 
   229  009B                     # 1224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   230                           EECON1 equ 09Ch ;# 
   231  009C                     # 1262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   232                           EECON2 equ 09Dh ;# 
   233  009D                     # 1269 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   234                           VRCON equ 09Fh ;# 
   235  009F                     	FNCALL	_main,_RX_Reciver_Init
   236                           	FNROOT	_main
   237                           	FNCALL	intlevel1,_ISR
   238                           	global	intlevel1
   239                           	FNROOT	intlevel1
   240                           	global	_RCREG
   241                           _RCREG	set	0x1A
   242  001A                     	global	_PORTA
   243                           _PORTA	set	0x5
   244  0005                     	global	_RCIF
   245                           _RCIF	set	0x65
   246  0065                     	global	_CREN
   247                           _CREN	set	0xC4
   248  00C4                     	global	_GIE
   249                           _GIE	set	0x5F
   250  005F                     	global	_PEIE
   251                           _PEIE	set	0x5E
   252  005E                     	global	_SPEN
   253                           _SPEN	set	0xC7
   254  00C7                     	global	_SPBRG
   255                           _SPBRG	set	0x99
   256  0099                     	global	_TRISA
   257                           _TRISA	set	0x85
   258  0085                     	global	_RCIE
   259                           _RCIE	set	0x465
   260  0465                     	global	_TRISB2
   261                           _TRISB2	set	0x432
   262  0432                     	global	_TRISB1
   263                           _TRISB1	set	0x431
   264  0431                     	global	_SYNC
   265                           _SYNC	set	0x4C4
   266  04C4                     	global	_BRGH
   267                           _BRGH	set	0x4C2
   268  04C2                     ; #config settings
   269                           global __CFG_FOSC$INTOSCIO
   270                           __CFG_FOSC$INTOSCIO equ 0x0
   271  0000                     global __CFG_WDTE$OFF
   272                           __CFG_WDTE$OFF equ 0x0
   273  0000                     global __CFG_PWRTE$OFF
   274                           __CFG_PWRTE$OFF equ 0x0
   275  0000                     global __CFG_MCLRE$OFF
   276                           __CFG_MCLRE$OFF equ 0x0
   277  0000                     global __CFG_BOREN$OFF
   278                           __CFG_BOREN$OFF equ 0x0
   279  0000                     global __CFG_LVP$OFF
   280                           __CFG_LVP$OFF equ 0x0
   281  0000                     global __CFG_CPD$OFF
   282                           __CFG_CPD$OFF equ 0x0
   283  0000                     global __CFG_CP$OFF
   284                           __CFG_CP$OFF equ 0x0
   285  0000                     	file	"C:\Users\Mostafa\AppData\Local\Temp\sdao."
   286                           	line	#
   287                           psect cinit,class=CODE,delta=2
   288                           global start_initialization
   289                           start_initialization:
   290  000B                     
   291                           global __initialization
   292                           __initialization:
   293  000B                     psect cinit,class=CODE,delta=2,merge=1
   294                           global end_of_initialization,__end_of__initialization
   295                           
   296                           ;End of C runtime variable initialization code
   297                           
   298                           end_of_initialization:
   299  000B                     __end_of__initialization:
   300  000B                     clrf status
   301  000B  0183               ljmp _main	;jump to C main() function
   302  000C  2832               psect	cstackCOMMON,class=COMMON,space=1,noexec
   303                           global __pcstackCOMMON
   304                           __pcstackCOMMON:
   305  0070                     ?_RX_Reciver_Init:	; 1 bytes @ 0x0
   306  0070                     ?_main:	; 1 bytes @ 0x0
   307  0070                     ?_ISR:	; 1 bytes @ 0x0
   308  0070                     ??_ISR:	; 1 bytes @ 0x0
   309  0070                     	ds	2
   310  0070                     ??_RX_Reciver_Init:	; 1 bytes @ 0x2
   311  0072                     ??_main:	; 1 bytes @ 0x2
   312  0072                     ;!
   313                           ;!Data Sizes:
   314                           ;!    Strings     0
   315                           ;!    Constant    0
   316                           ;!    Data        0
   317                           ;!    BSS         0
   318                           ;!    Persistent  0
   319                           ;!    Stack       0
   320                           ;!
   321                           ;!Auto Spaces:
   322                           ;!    Space          Size  Autos    Used
   323                           ;!    COMMON           14      2       2
   324                           ;!    BANK0            80      0       0
   325                           ;!    BANK1            80      0       0
   326                           ;!    BANK2            48      0       0
   327                           
   328                           ;!
   329                           ;!Pointer List with Targets:
   330                           ;!
   331                           ;!    None.
   332                           
   333                           
   334                           ;!
   335                           ;!Critical Paths under _main in COMMON
   336                           ;!
   337                           ;!    None.
   338                           ;!
   339                           ;!Critical Paths under _ISR in COMMON
   340                           ;!
   341                           ;!    None.
   342                           ;!
   343                           ;!Critical Paths under _main in BANK0
   344                           ;!
   345                           ;!    None.
   346                           ;!
   347                           ;!Critical Paths under _ISR in BANK0
   348                           ;!
   349                           ;!    None.
   350                           ;!
   351                           ;!Critical Paths under _main in BANK1
   352                           ;!
   353                           ;!    None.
   354                           ;!
   355                           ;!Critical Paths under _ISR in BANK1
   356                           ;!
   357                           ;!    None.
   358                           ;!
   359                           ;!Critical Paths under _main in BANK2
   360                           ;!
   361                           ;!    None.
   362                           ;!
   363                           ;!Critical Paths under _ISR in BANK2
   364                           ;!
   365                           ;!    None.
   366                           
   367 ;;
   368 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   369 ;;
   370                           
   371                           ;!
   372                           ;!Call Graph Tables:
   373                           ;!
   374                           ;! ---------------------------------------------------------------------------------
   375                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   376                           ;! ---------------------------------------------------------------------------------
   377                           ;! (0) _main                                                 0     0      0       0
   378                           ;!                    _RX_Reciver_Init
   379                           ;! ---------------------------------------------------------------------------------
   380                           ;! (1) _RX_Reciver_Init                                      0     0      0       0
   381                           ;! ---------------------------------------------------------------------------------
   382                           ;! Estimated maximum stack depth 1
   383                           ;! ---------------------------------------------------------------------------------
   384                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   385                           ;! ---------------------------------------------------------------------------------
   386                           ;! (2) _ISR                                                  2     2      0       0
   387                           ;!                                              0 COMMON     2     2      0
   388                           ;! ---------------------------------------------------------------------------------
   389                           ;! Estimated maximum stack depth 2
   390                           ;! ---------------------------------------------------------------------------------
   391                           ;!
   392                           ;! Call Graph Graphs:
   393                           ;!
   394                           ;! _main (ROOT)
   395                           ;!   _RX_Reciver_Init
   396                           ;!
   397                           ;! _ISR (ROOT)
   398                           ;!
   399                           
   400                           ;! Address spaces:
   401                           
   402                           ;!Name               Size   Autos  Total    Cost      Usage
   403                           ;!BITCOMMON            E      0       0       0        0.0%
   404                           ;!EEDATA              80      0       0       0        0.0%
   405                           ;!NULL                 0      0       0       0        0.0%
   406                           ;!CODE                 0      0       0       0        0.0%
   407                           ;!COMMON               E      2       2       1       14.3%
   408                           ;!BITSFR0              0      0       0       1        0.0%
   409                           ;!SFR0                 0      0       0       1        0.0%
   410                           ;!BITSFR1              0      0       0       2        0.0%
   411                           ;!SFR1                 0      0       0       2        0.0%
   412                           ;!STACK                0      0       0       2        0.0%
   413                           ;!BANK0               50      0       0       3        0.0%
   414                           ;!BITSFR3              0      0       0       4        0.0%
   415                           ;!SFR3                 0      0       0       4        0.0%
   416                           ;!ABS                  0      0       0       4        0.0%
   417                           ;!BITBANK0            50      0       0       5        0.0%
   418                           ;!BITSFR2              0      0       0       5        0.0%
   419                           ;!SFR2                 0      0       0       5        0.0%
   420                           ;!BITBANK1            50      0       0       6        0.0%
   421                           ;!BANK1               50      0       0       7        0.0%
   422                           ;!BITBANK2            30      0       0       8        0.0%
   423                           ;!BANK2               30      0       0       9        0.0%
   424                           ;!DATA                 0      0       0      10        0.0%
   425                           
   426                           	global	_main
   427                           
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 16 in file "main.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : B00/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   444 ;;      Params:         0       0       0       0
   445 ;;      Locals:         0       0       0       0
   446 ;;      Temps:          0       0       0       0
   447 ;;      Totals:         0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels required when called:    2
   450 ;; This function calls:
   451 ;;		_RX_Reciver_Init
   452 ;; This function is called by:
   453 ;;		Startup code after reset
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   457                           	file	"main.c"
   458                           	line	16
   459                           global __pmaintext
   460                           __pmaintext:	;psect for function _main
   461  0032                     psect	maintext
   462                           	file	"main.c"
   463                           	line	16
   464                           	global	__size_of_main
   465                           	__size_of_main	equ	__end_of_main-_main
   466  0009                     	
   467                           _main:	
   468  0032                     ;incstack = 0
   469                           	opt	stack 6
   470                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   471                           	line	17
   472                           	
   473                           l640:	
   474  0032                     ;main.c: 17:     RX_Reciver_Init();
   475                           	fcall	_RX_Reciver_Init
   476  0032  200D               	line	18
   477                           	
   478                           l642:	
   479  0033                     ;main.c: 18:     TRISA&=0b00000000;
   480                           	bsf	status, 5	;RP0=1, select bank1
   481  0033  1683               	bcf	status, 6	;RP1=0, select bank1
   482  0034  1303               	clrf	(133)^080h	;volatile
   483  0035  0185               	line	19
   484                           	
   485                           l644:	
   486  0036                     ;main.c: 19:     PORTA=0x00;
   487                           	bcf	status, 5	;RP0=0, select bank0
   488  0036  1283               	bcf	status, 6	;RP1=0, select bank0
   489  0037  1303               	clrf	(5)	;volatile
   490  0038  0185               	line	20
   491                           ;main.c: 20:     while(1){
   492                           	
   493                           l35:	
   494  0039                     	line	22
   495                           ;main.c: 22:     }
   496                           	
   497                           l36:	
   498  0039                     	goto	l35
   499  0039  2839               	
   500                           l37:	
   501  003A                     	line	24
   502                           ;main.c: 23:     return;
   503                           	
   504                           l38:	
   505  003A                     	global	start
   506                           	ljmp	start
   507  003A  280A               	opt stack 0
   508                           GLOBAL	__end_of_main
   509                           	__end_of_main:
   510  003B                     	signat	_main,89
   511                           	global	_RX_Reciver_Init
   512                           
   513 ;; *************** function _RX_Reciver_Init *****************
   514 ;; Defined at:
   515 ;;		line 26 in file "main.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   529 ;;      Params:         0       0       0       0
   530 ;;      Locals:         0       0       0       0
   531 ;;      Temps:          0       0       0       0
   532 ;;      Totals:         0       0       0       0
   533 ;;Total ram usage:        0 bytes
   534 ;; Hardware stack levels used:    1
   535 ;; Hardware stack levels required when called:    1
   536 ;; This function calls:
   537 ;;		Nothing
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   543                           	line	26
   544                           global __ptext1
   545                           __ptext1:	;psect for function _RX_Reciver_Init
   546  000D                     psect	text1
   547                           	file	"main.c"
   548                           	line	26
   549                           	global	__size_of_RX_Reciver_Init
   550                           	__size_of_RX_Reciver_Init	equ	__end_of_RX_Reciver_Init-_RX_Reciver_Init
   551  0014                     	
   552                           _RX_Reciver_Init:	
   553  000D                     ;incstack = 0
   554                           	opt	stack 6
   555                           ; Regs used in _RX_Reciver_Init: [wreg]
   556                           	line	27
   557                           	
   558                           l620:	
   559  000D                     ;main.c: 27:     BRGH = 1;
   560                           	bsf	status, 5	;RP0=1, select bank1
   561  000D  1683               	bcf	status, 6	;RP1=0, select bank1
   562  000E  1303               	bsf	(1218/8)^080h,(1218)&7	;volatile
   563  000F  1518               	line	28
   564                           	
   565                           l622:	
   566  0010                     ;main.c: 28:     SPBRG = 25;
   567                           	movlw	low(019h)
   568  0010  3019               	movwf	(153)^080h	;volatile
   569  0011  0099               	line	30
   570                           	
   571                           l624:	
   572  0012                     ;main.c: 30:     SYNC = 0;
   573                           	bcf	(1220/8)^080h,(1220)&7	;volatile
   574  0012  1218               	line	31
   575                           	
   576                           l626:	
   577  0013                     ;main.c: 31:     SPEN = 1;
   578                           	bcf	status, 5	;RP0=0, select bank0
   579  0013  1283               	bcf	status, 6	;RP1=0, select bank0
   580  0014  1303               	bsf	(199/8),(199)&7	;volatile
   581  0015  1798               	line	33
   582                           	
   583                           l628:	
   584  0016                     ;main.c: 33:     TRISB1=1;
   585                           	bsf	status, 5	;RP0=1, select bank1
   586  0016  1683               	bcf	status, 6	;RP1=0, select bank1
   587  0017  1303               	bsf	(1073/8)^080h,(1073)&7	;volatile
   588  0018  1486               	line	34
   589                           	
   590                           l630:	
   591  0019                     ;main.c: 34:     TRISB2=1;
   592                           	bsf	(1074/8)^080h,(1074)&7	;volatile
   593  0019  1506               	line	36
   594                           	
   595                           l632:	
   596  001A                     ;main.c: 36:     RCIE=1;
   597                           	bsf	(1125/8)^080h,(1125)&7	;volatile
   598  001A  168C               	line	37
   599                           	
   600                           l634:	
   601  001B                     ;main.c: 37:     PEIE=1;
   602                           	bsf	(94/8),(94)&7	;volatile
   603  001B  170B               	line	38
   604                           	
   605                           l636:	
   606  001C                     ;main.c: 38:     GIE=1;
   607                           	bsf	(95/8),(95)&7	;volatile
   608  001C  178B               	line	40
   609                           	
   610                           l638:	
   611  001D                     ;main.c: 40:     CREN=1;
   612                           	bcf	status, 5	;RP0=0, select bank0
   613  001D  1283               	bcf	status, 6	;RP1=0, select bank0
   614  001E  1303               	bsf	(196/8),(196)&7	;volatile
   615  001F  1618               	line	41
   616                           	
   617                           l41:	
   618  0020                     	return
   619  0020  0008               	opt stack 0
   620                           GLOBAL	__end_of_RX_Reciver_Init
   621                           	__end_of_RX_Reciver_Init:
   622  0021                     	signat	_RX_Reciver_Init,89
   623                           	global	_ISR
   624                           
   625 ;; *************** function _ISR *****************
   626 ;; Defined at:
   627 ;;		line 43 in file "main.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   641 ;;      Params:         0       0       0       0
   642 ;;      Locals:         0       0       0       0
   643 ;;      Temps:          2       0       0       0
   644 ;;      Totals:         2       0       0       0
   645 ;;Total ram usage:        2 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		Interrupt level 1
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
   654                           	line	43
   655                           global __ptext2
   656                           __ptext2:	;psect for function _ISR
   657  0021                     psect	text2
   658                           	file	"main.c"
   659                           	line	43
   660                           	global	__size_of_ISR
   661                           	__size_of_ISR	equ	__end_of_ISR-_ISR
   662  0011                     	
   663                           _ISR:	
   664  0021                     ;incstack = 0
   665                           	opt	stack 6
   666                           ; Regs used in _ISR: [wreg]
   667                           psect	intentry,class=CODE,delta=2
   668                           global __pintentry
   669                           __pintentry:
   670  0004                     global interrupt_function
   671                           interrupt_function:
   672  0004                     	global saved_w
   673                           	saved_w	set	btemp+0
   674  007E                     	movwf	saved_w
   675  0004  00FE               	swapf	status,w
   676  0005  0E03               	movwf	(??_ISR+0)
   677  0006  00F0               	movf	pclath,w
   678  0007  080A               	movwf	(??_ISR+1)
   679  0008  00F1               	ljmp	_ISR
   680  0009  2821               psect	text2
   681                           	line	44
   682                           	
   683                           i1l646:	
   684  0021                     ;main.c: 44:     if (RCIF == 1){
   685                           	bcf	status, 5	;RP0=0, select bank0
   686  0021  1283               	bcf	status, 6	;RP1=0, select bank0
   687  0022  1303               	btfss	(101/8),(101)&7	;volatile
   688  0023  1E8C               	goto	u1_21
   689  0024  2826               	goto	u1_20
   690  0025  2827               u1_21:
   691  0026                     	goto	i1l47
   692  0026  282B               u1_20:
   693  0027                     	line	45
   694                           	
   695                           i1l648:	
   696  0027                     ;main.c: 45:         PORTA=RCREG;
   697                           	movf	(26),w	;volatile
   698  0027  081A               	movwf	(5)	;volatile
   699  0028  0085               	line	46
   700                           	
   701                           i1l650:	
   702  0029                     ;main.c: 46:         RCIF = 0;
   703                           	bcf	(101/8),(101)&7	;volatile
   704  0029  128C               	goto	i1l47
   705  002A  282B               	line	47
   706                           ;main.c: 47:     }
   707                           	
   708                           i1l46:	
   709  002B                     	line	48
   710                           	
   711                           i1l47:	
   712  002B                     	movf	(??_ISR+1),w
   713  002B  0871               	movwf	pclath
   714  002C  008A               	swapf	(??_ISR+0)^0FFFFFF80h,w
   715  002D  0E70               	movwf	status
   716  002E  0083               	swapf	saved_w,f
   717  002F  0EFE               	swapf	saved_w,w
   718  0030  0E7E               	retfie
   719  0031  0009               	opt stack 0
   720                           GLOBAL	__end_of_ISR
   721                           	__end_of_ISR:
   722  0032                     	signat	_ISR,89
   723                           global	___latbits
   724                           ___latbits	equ	0
   725  0000                     	global	btemp
   726                           	btemp set 07Eh
   727  007E                     
   728                           	DABS	1,126,2	;btemp
   729                           	global	wtemp0
   730                           	wtemp0 set btemp+0
   731  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                    _RX_Reciver_Init
 ---------------------------------------------------------------------------------
 (1) _RX_Reciver_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RX_Reciver_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Apr 25 01:55:20 2023

       ??_RX_Reciver_Init 0072               __CFG_CP$OFF 0000                        l41 0020  
                      l35 0039                        l36 0039                        l37 003A  
                      l38 003A                       l620 000D                       l630 0019  
                     l622 0010                       l632 001A                       l624 0012  
                     l640 0032                       l634 001B                       l626 0013  
                     l642 0033                       l636 001C                       l628 0016  
                     l644 0036                       l638 001D                       _GIE 005F  
            __CFG_CPD$OFF 0000                       _ISR 0021              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      _BRGH 04C2                      _CREN 00C4  
                    _PEIE 005E                      _RCIE 0465                      _RCIF 0065  
                    i1l46 002B                      i1l47 002B                      _SPEN 00C7  
                    _SYNC 04C4                      u1_20 0027                      u1_21 0026  
                    _main 0032                      btemp 007E                      start 000A  
                   ??_ISR 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   i1l650 0029                     i1l646 0021                     i1l648 0027  
                   _RCREG 001A                     _SPBRG 0099                     _PORTA 0005  
                   _TRISA 0085            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000B              __end_of_main 003B                    ??_main 0072  
                  _TRISB1 0431                    _TRISB2 0432            __CFG_PWRTE$OFF 0000  
                  saved_w 007E   __end_of__initialization 000B           _RX_Reciver_Init 000D  
          __pcstackCOMMON 0070                __pmaintext 0032                __pintentry 0004  
 __end_of_RX_Reciver_Init 0021                   __ptext1 000D                   __ptext2 0021  
            __size_of_ISR 0011      end_of_initialization 000B          ?_RX_Reciver_Init 0070  
     start_initialization 000B               __end_of_ISR 0032                 ___latbits 0000  
       interrupt_function 0004             __size_of_main 0009  __size_of_RX_Reciver_Init 0014  
                intlevel1 0000        __CFG_FOSC$INTOSCIO 0000  
