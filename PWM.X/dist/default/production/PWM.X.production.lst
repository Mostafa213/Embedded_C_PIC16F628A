

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Apr 23 06:49:35 2023

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F628A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   116                           TMR2 equ 011h ;# 
   117  0011                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   118                           T2CON equ 012h ;# 
   119  0012                     # 605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   120                           CCPR1 equ 015h ;# 
   121  0015                     # 612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   122                           CCPR1L equ 015h ;# 
   123  0015                     # 619 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   124                           CCPR1H equ 016h ;# 
   125  0016                     # 626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   126                           CCP1CON equ 017h ;# 
   127  0017                     # 684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   128                           RCSTA equ 018h ;# 
   129  0018                     # 755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   130                           TXREG equ 019h ;# 
   131  0019                     # 762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   132                           RCREG equ 01Ah ;# 
   133  001A                     # 769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   134                           CMCON equ 01Fh ;# 
   135  001F                     # 839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   136                           OPTION_REG equ 081h ;# 
   137  0081                     # 909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   138                           TRISA equ 085h ;# 
   139  0085                     # 971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   140                           TRISB equ 086h ;# 
   141  0086                     # 1033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   142                           PIE1 equ 08Ch ;# 
   143  008C                     # 1090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   144                           PCON equ 08Eh ;# 
   145  008E                     # 1139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   146                           PR2 equ 092h ;# 
   147  0092                     # 1146 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   148                           TXSTA equ 098h ;# 
   149  0098                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   150                           SPBRG equ 099h ;# 
   151  0099                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   152                           EEDATA equ 09Ah ;# 
   153  009A                     # 1217 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   154                           EEADR equ 09Bh ;# 
   155  009B                     # 1224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   156                           EECON1 equ 09Ch ;# 
   157  009C                     # 1262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   158                           EECON2 equ 09Dh ;# 
   159  009D                     # 1269 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   160                           VRCON equ 09Fh ;# 
   161  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   162                           INDF equ 00h ;# 
   163  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   164                           TMR0 equ 01h ;# 
   165  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   166                           PCL equ 02h ;# 
   167  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   168                           STATUS equ 03h ;# 
   169  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   170                           FSR equ 04h ;# 
   171  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   172                           PORTA equ 05h ;# 
   173  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   174                           PORTB equ 06h ;# 
   175  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   176                           PCLATH equ 0Ah ;# 
   177  000A                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   178                           INTCON equ 0Bh ;# 
   179  000B                     # 390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   180                           PIR1 equ 0Ch ;# 
   181  000C                     # 447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   182                           TMR1 equ 0Eh ;# 
   183  000E                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   184                           TMR1L equ 0Eh ;# 
   185  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   186                           TMR1H equ 0Fh ;# 
   187  000F                     # 468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   188                           T1CON equ 010h ;# 
   189  0010                     # 527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   190                           TMR2 equ 011h ;# 
   191  0011                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   192                           T2CON equ 012h ;# 
   193  0012                     # 605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   194                           CCPR1 equ 015h ;# 
   195  0015                     # 612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   196                           CCPR1L equ 015h ;# 
   197  0015                     # 619 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   198                           CCPR1H equ 016h ;# 
   199  0016                     # 626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   200                           CCP1CON equ 017h ;# 
   201  0017                     # 684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   202                           RCSTA equ 018h ;# 
   203  0018                     # 755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   204                           TXREG equ 019h ;# 
   205  0019                     # 762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   206                           RCREG equ 01Ah ;# 
   207  001A                     # 769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   208                           CMCON equ 01Fh ;# 
   209  001F                     # 839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   210                           OPTION_REG equ 081h ;# 
   211  0081                     # 909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   212                           TRISA equ 085h ;# 
   213  0085                     # 971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   214                           TRISB equ 086h ;# 
   215  0086                     # 1033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   216                           PIE1 equ 08Ch ;# 
   217  008C                     # 1090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   218                           PCON equ 08Eh ;# 
   219  008E                     # 1139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   220                           PR2 equ 092h ;# 
   221  0092                     # 1146 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   222                           TXSTA equ 098h ;# 
   223  0098                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   224                           SPBRG equ 099h ;# 
   225  0099                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   226                           EEDATA equ 09Ah ;# 
   227  009A                     # 1217 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   228                           EEADR equ 09Bh ;# 
   229  009B                     # 1224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   230                           EECON1 equ 09Ch ;# 
   231  009C                     # 1262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   232                           EECON2 equ 09Dh ;# 
   233  009D                     # 1269 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   234                           VRCON equ 09Fh ;# 
   235  009F                     	FNCALL	_main,_Set_Duty
   236                           	FNROOT	_main
   237                           	global	_Duty
   238                           psect	nvCOMMON,class=COMMON,space=1,noexec
   239                           global __pnvCOMMON
   240                           __pnvCOMMON:
   241  0074                     _Duty:
   242  0074                            ds      2
   243  0074                     
   244                           	global	_CCPR1L
   245                           _CCPR1L	set	0x15
   246  0015                     	global	_CCP1X
   247                           _CCP1X	set	0xBD
   248  00BD                     	global	_CCP1Y
   249                           _CCP1Y	set	0xBC
   250  00BC                     	global	_TMR2ON
   251                           _TMR2ON	set	0x92
   252  0092                     	global	_T2CKPS1
   253                           _T2CKPS1	set	0x91
   254  0091                     	global	_T2CKPS0
   255                           _T2CKPS0	set	0x90
   256  0090                     	global	_CCP1M3
   257                           _CCP1M3	set	0xBB
   258  00BB                     	global	_CCP1M2
   259                           _CCP1M2	set	0xBA
   260  00BA                     	global	_PR2
   261                           _PR2	set	0x92
   262  0092                     	global	_TRISB3
   263                           _TRISB3	set	0x433
   264  0433                     ; #config settings
   265                           global __CFG_FOSC$INTOSCIO
   266                           __CFG_FOSC$INTOSCIO equ 0x0
   267  0000                     global __CFG_WDTE$OFF
   268                           __CFG_WDTE$OFF equ 0x0
   269  0000                     global __CFG_PWRTE$OFF
   270                           __CFG_PWRTE$OFF equ 0x0
   271  0000                     global __CFG_MCLRE$OFF
   272                           __CFG_MCLRE$OFF equ 0x0
   273  0000                     global __CFG_BOREN$OFF
   274                           __CFG_BOREN$OFF equ 0x0
   275  0000                     global __CFG_LVP$OFF
   276                           __CFG_LVP$OFF equ 0x0
   277  0000                     global __CFG_CPD$OFF
   278                           __CFG_CPD$OFF equ 0x0
   279  0000                     global __CFG_CP$OFF
   280                           __CFG_CP$OFF equ 0x0
   281  0000                     	file	"C:\Users\Mostafa\AppData\Local\Temp\slf4."
   282                           	line	#
   283                           psect cinit,class=CODE,delta=2
   284                           global start_initialization
   285                           start_initialization:
   286  07FE                     
   287                           global __initialization
   288                           __initialization:
   289  07FE                     psect cinit,class=CODE,delta=2,merge=1
   290                           global end_of_initialization,__end_of__initialization
   291                           
   292                           ;End of C runtime variable initialization code
   293                           
   294                           end_of_initialization:
   295  07FE                     __end_of__initialization:
   296  07FE                     clrf status
   297  07FE  0183               ljmp _main	;jump to C main() function
   298  07FF  2FA3               psect	cstackCOMMON,class=COMMON,space=1,noexec
   299                           global __pcstackCOMMON
   300                           __pcstackCOMMON:
   301  0070                     ?_Set_Duty:	; 1 bytes @ 0x0
   302  0070                     ??_Set_Duty:	; 1 bytes @ 0x0
   303  0070                     ?_main:	; 1 bytes @ 0x0
   304  0070                     	ds	2
   305  0070                     ??_main:	; 1 bytes @ 0x2
   306  0072                     	ds	2
   307  0072                     ;!
   308                           ;!Data Sizes:
   309                           ;!    Strings     0
   310                           ;!    Constant    0
   311                           ;!    Data        0
   312                           ;!    BSS         0
   313                           ;!    Persistent  2
   314                           ;!    Stack       0
   315                           ;!
   316                           ;!Auto Spaces:
   317                           ;!    Space          Size  Autos    Used
   318                           ;!    COMMON           14      4       6
   319                           ;!    BANK0            80      0       0
   320                           ;!    BANK1            80      0       0
   321                           ;!    BANK2            48      0       0
   322                           
   323                           ;!
   324                           ;!Pointer List with Targets:
   325                           ;!
   326                           ;!    None.
   327                           
   328                           
   329                           ;!
   330                           ;!Critical Paths under _main in COMMON
   331                           ;!
   332                           ;!    _main->_Set_Duty
   333                           ;!
   334                           ;!Critical Paths under _main in BANK0
   335                           ;!
   336                           ;!    None.
   337                           ;!
   338                           ;!Critical Paths under _main in BANK1
   339                           ;!
   340                           ;!    None.
   341                           ;!
   342                           ;!Critical Paths under _main in BANK2
   343                           ;!
   344                           ;!    None.
   345                           
   346 ;;
   347 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   348 ;;
   349                           
   350                           ;!
   351                           ;!Call Graph Tables:
   352                           ;!
   353                           ;! ---------------------------------------------------------------------------------
   354                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   355                           ;! ---------------------------------------------------------------------------------
   356                           ;! (0) _main                                                 2     2      0       0
   357                           ;!                                              2 COMMON     2     2      0
   358                           ;!                           _Set_Duty
   359                           ;! ---------------------------------------------------------------------------------
   360                           ;! (1) _Set_Duty                                             2     2      0       0
   361                           ;!                                              0 COMMON     2     2      0
   362                           ;! ---------------------------------------------------------------------------------
   363                           ;! Estimated maximum stack depth 1
   364                           ;! ---------------------------------------------------------------------------------
   365                           ;!
   366                           ;! Call Graph Graphs:
   367                           ;!
   368                           ;! _main (ROOT)
   369                           ;!   _Set_Duty
   370                           ;!
   371                           
   372                           ;! Address spaces:
   373                           
   374                           ;!Name               Size   Autos  Total    Cost      Usage
   375                           ;!BITCOMMON            E      0       0       0        0.0%
   376                           ;!EEDATA              80      0       0       0        0.0%
   377                           ;!NULL                 0      0       0       0        0.0%
   378                           ;!CODE                 0      0       0       0        0.0%
   379                           ;!COMMON               E      4       6       1       42.9%
   380                           ;!BITSFR0              0      0       0       1        0.0%
   381                           ;!SFR0                 0      0       0       1        0.0%
   382                           ;!BITSFR1              0      0       0       2        0.0%
   383                           ;!SFR1                 0      0       0       2        0.0%
   384                           ;!STACK                0      0       0       2        0.0%
   385                           ;!BANK0               50      0       0       3        0.0%
   386                           ;!BITSFR3              0      0       0       4        0.0%
   387                           ;!SFR3                 0      0       0       4        0.0%
   388                           ;!ABS                  0      0       6       4        0.0%
   389                           ;!BITBANK0            50      0       0       5        0.0%
   390                           ;!BITSFR2              0      0       0       5        0.0%
   391                           ;!SFR2                 0      0       0       5        0.0%
   392                           ;!BITBANK1            50      0       0       6        0.0%
   393                           ;!BANK1               50      0       0       7        0.0%
   394                           ;!BITBANK2            30      0       0       8        0.0%
   395                           ;!BANK2               30      0       0       9        0.0%
   396                           ;!DATA                 0      0       6      10        0.0%
   397                           
   398                           	global	_main
   399                           
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 16 in file "main.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, status,2, status,0, pclath, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : B00/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   416 ;;      Params:         0       0       0       0
   417 ;;      Locals:         0       0       0       0
   418 ;;      Temps:          2       0       0       0
   419 ;;      Totals:         2       0       0       0
   420 ;;Total ram usage:        2 bytes
   421 ;; Hardware stack levels required when called:    1
   422 ;; This function calls:
   423 ;;		_Set_Duty
   424 ;; This function is called by:
   425 ;;		Startup code after reset
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   429                           	file	"main.c"
   430                           	line	16
   431                           global __pmaintext
   432                           __pmaintext:	;psect for function _main
   433  07A3                     psect	maintext
   434                           	file	"main.c"
   435                           	line	16
   436                           	global	__size_of_main
   437                           	__size_of_main	equ	__end_of_main-_main
   438  005B                     	
   439                           _main:	
   440  07A3                     ;incstack = 0
   441                           	opt	stack 7
   442                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   443                           	line	17
   444                           	
   445                           l623:	
   446  07A3                     ;main.c: 17:     CCP1M2=1;
   447                           	bcf	status, 5	;RP0=0, select bank0
   448  07A3  1283               	bcf	status, 6	;RP1=0, select bank0
   449  07A4  1303               	bsf	(186/8),(186)&7	;volatile
   450  07A5  1517               	line	18
   451                           ;main.c: 18:     CCP1M3=1;
   452                           	bsf	(187/8),(187)&7	;volatile
   453  07A6  1597               	line	19
   454                           ;main.c: 19:     TRISB3=0;
   455                           	bsf	status, 5	;RP0=1, select bank1
   456  07A7  1683               	bcf	status, 6	;RP1=0, select bank1
   457  07A8  1303               	bcf	(1075/8)^080h,(1075)&7	;volatile
   458  07A9  1186               	line	20
   459                           	
   460                           l625:	
   461  07AA                     ;main.c: 20:     PR2=124;
   462                           	movlw	low(07Ch)
   463  07AA  307C               	movwf	(146)^080h	;volatile
   464  07AB  0092               	line	21
   465                           	
   466                           l627:	
   467  07AC                     ;main.c: 21:     T2CKPS0=1;
   468                           	bcf	status, 5	;RP0=0, select bank0
   469  07AC  1283               	bcf	status, 6	;RP1=0, select bank0
   470  07AD  1303               	bsf	(144/8),(144)&7	;volatile
   471  07AE  1412               	line	22
   472                           	
   473                           l629:	
   474  07AF                     ;main.c: 22:     T2CKPS1=0;
   475                           	bcf	(145/8),(145)&7	;volatile
   476  07AF  1092               	line	23
   477                           	
   478                           l631:	
   479  07B0                     ;main.c: 23:     TMR2ON=1;
   480                           	bsf	(146/8),(146)&7	;volatile
   481  07B0  1512               	goto	l633
   482  07B1  2FB2               	line	24
   483                           ;main.c: 24:     while(1){
   484                           	
   485                           l31:	
   486  07B2                     	line	25
   487                           	
   488                           l633:	
   489  07B2                     ;main.c: 25:         Duty=0;
   490                           	clrf	(_Duty)
   491  07B2  01F4               	clrf	(_Duty+1)
   492  07B3  01F5               	line	26
   493                           ;main.c: 26:         while(Duty<500){
   494                           	goto	l641
   495  07B4  2FC6               	
   496                           l33:	
   497  07B5                     	line	27
   498                           	
   499                           l635:	
   500  07B5                     ;main.c: 27:             Set_Duty();
   501                           	fcall	_Set_Duty
   502  07B5  2781               	line	28
   503                           	
   504                           l637:	
   505  07B6                     ;main.c: 28:             Duty++;
   506                           	movlw	01h
   507  07B6  3001               	addwf	(_Duty),f
   508  07B7  07F4               	skipnc
   509  07B8  1803               	incf	(_Duty+1),f
   510  07B9  0AF5               	movlw	0
   511  07BA  3000               	addwf	(_Duty+1),f
   512  07BB  07F5               	line	29
   513                           	
   514                           l639:	
   515  07BC                     ;main.c: 29:             _delay((unsigned long)((2)*(4000000/4000.0)));
   516                           	opt asmopt_push
   517                           opt asmopt_off
   518                           movlw	3
   519  07BC  3003               movwf	((??_main+0)+0+1),f
   520  07BD  00F3               	movlw	151
   521  07BE  3097               movwf	((??_main+0)+0),f
   522  07BF  00F2               	u67:
   523  07C0                     decfsz	((??_main+0)+0),f
   524  07C0  0BF2               	goto	u67
   525  07C1  2FC0               	decfsz	((??_main+0)+0+1),f
   526  07C2  0BF3               	goto	u67
   527  07C3  2FC0               	nop2
   528  07C4  2FC5               opt asmopt_pop
   529                           
   530                           	goto	l641
   531  07C5  2FC6               	line	30
   532                           ;main.c: 30:         }
   533                           	
   534                           l32:	
   535  07C6                     	line	26
   536                           	
   537                           l641:	
   538  07C6                     ;main.c: 26:         while(Duty<500){
   539                           	movlw	01h
   540  07C6  3001               	subwf	(_Duty+1),w
   541  07C7  0275               	movlw	0F4h
   542  07C8  30F4               	skipnz
   543  07C9  1903               	subwf	(_Duty),w
   544  07CA  0274               	skipc
   545  07CB  1C03               	goto	u41
   546  07CC  2FCE               	goto	u40
   547  07CD  2FCF               u41:
   548  07CE                     	goto	l635
   549  07CE  2FB5               u40:
   550  07CF                     	goto	l643
   551  07CF  2FD0               	
   552                           l34:	
   553  07D0                     	line	31
   554                           	
   555                           l643:	
   556  07D0                     ;main.c: 31:         _delay((unsigned long)((100)*(4000000/4000.0)));
   557                           	opt asmopt_push
   558                           opt asmopt_off
   559                           movlw	130
   560  07D0  3082               movwf	((??_main+0)+0+1),f
   561  07D1  00F3               	movlw	221
   562  07D2  30DD               movwf	((??_main+0)+0),f
   563  07D3  00F2               	u77:
   564  07D4                     decfsz	((??_main+0)+0),f
   565  07D4  0BF2               	goto	u77
   566  07D5  2FD4               	decfsz	((??_main+0)+0+1),f
   567  07D6  0BF3               	goto	u77
   568  07D7  2FD4               	nop2
   569  07D8  2FD9               opt asmopt_pop
   570                           
   571                           	line	32
   572                           ;main.c: 32:         while(Duty>0){
   573                           	goto	l651
   574  07D9  2FEB               	
   575                           l36:	
   576  07DA                     	line	33
   577                           	
   578                           l645:	
   579  07DA                     ;main.c: 33:             Set_Duty();
   580                           	fcall	_Set_Duty
   581  07DA  2781               	line	34
   582                           	
   583                           l647:	
   584  07DB                     ;main.c: 34:             Duty--;
   585                           	movlw	01h
   586  07DB  3001               	subwf	(_Duty),f
   587  07DC  02F4               	movlw	0
   588  07DD  3000               	skipc
   589  07DE  1C03               	decf	(_Duty+1),f
   590  07DF  03F5               	subwf	(_Duty+1),f
   591  07E0  02F5               	line	35
   592                           	
   593                           l649:	
   594  07E1                     ;main.c: 35:             _delay((unsigned long)((2)*(4000000/4000.0)));
   595                           	opt asmopt_push
   596                           opt asmopt_off
   597                           movlw	3
   598  07E1  3003               movwf	((??_main+0)+0+1),f
   599  07E2  00F3               	movlw	151
   600  07E3  3097               movwf	((??_main+0)+0),f
   601  07E4  00F2               	u87:
   602  07E5                     decfsz	((??_main+0)+0),f
   603  07E5  0BF2               	goto	u87
   604  07E6  2FE5               	decfsz	((??_main+0)+0+1),f
   605  07E7  0BF3               	goto	u87
   606  07E8  2FE5               	nop2
   607  07E9  2FEA               opt asmopt_pop
   608                           
   609                           	goto	l651
   610  07EA  2FEB               	line	36
   611                           ;main.c: 36:         }
   612                           	
   613                           l35:	
   614  07EB                     	line	32
   615                           	
   616                           l651:	
   617  07EB                     ;main.c: 32:         while(Duty>0){
   618                           	movf	((_Duty)),w
   619  07EB  0874               iorwf	((_Duty+1)),w
   620  07EC  0475               	btfss	status,2
   621  07ED  1D03               	goto	u51
   622  07EE  2FF0               	goto	u50
   623  07EF  2FF1               u51:
   624  07F0                     	goto	l645
   625  07F0  2FDA               u50:
   626  07F1                     	goto	l653
   627  07F1  2FF2               	
   628                           l37:	
   629  07F2                     	line	37
   630                           	
   631                           l653:	
   632  07F2                     ;main.c: 37:         _delay((unsigned long)((100)*(4000000/4000.0)));
   633                           	opt asmopt_push
   634                           opt asmopt_off
   635                           movlw	130
   636  07F2  3082               movwf	((??_main+0)+0+1),f
   637  07F3  00F3               	movlw	221
   638  07F4  30DD               movwf	((??_main+0)+0),f
   639  07F5  00F2               	u97:
   640  07F6                     decfsz	((??_main+0)+0),f
   641  07F6  0BF2               	goto	u97
   642  07F7  2FF6               	decfsz	((??_main+0)+0+1),f
   643  07F8  0BF3               	goto	u97
   644  07F9  2FF6               	nop2
   645  07FA  2FFB               opt asmopt_pop
   646                           
   647                           	goto	l633
   648  07FB  2FB2               	line	38
   649                           ;main.c: 38:     }
   650                           	
   651                           l38:	
   652  07FC                     	goto	l633
   653  07FC  2FB2               	
   654                           l39:	
   655  07FD                     	line	40
   656                           ;main.c: 39:     return;
   657                           	
   658                           l40:	
   659  07FD                     	global	start
   660                           	ljmp	start
   661  07FD  2800               	opt stack 0
   662                           GLOBAL	__end_of_main
   663                           	__end_of_main:
   664  07FE                     	signat	_main,89
   665                           	global	_Set_Duty
   666                           
   667 ;; *************** function _Set_Duty *****************
   668 ;; Defined at:
   669 ;;		line 42 in file "main.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   683 ;;      Params:         0       0       0       0
   684 ;;      Locals:         0       0       0       0
   685 ;;      Temps:          2       0       0       0
   686 ;;      Totals:         2       0       0       0
   687 ;;Total ram usage:        2 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; This function calls:
   690 ;;		Nothing
   691 ;; This function is called by:
   692 ;;		_main
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   696                           	line	42
   697                           global __ptext1
   698                           __ptext1:	;psect for function _Set_Duty
   699  0781                     psect	text1
   700                           	file	"main.c"
   701                           	line	42
   702                           	global	__size_of_Set_Duty
   703                           	__size_of_Set_Duty	equ	__end_of_Set_Duty-_Set_Duty
   704  0022                     	
   705                           _Set_Duty:	
   706  0781                     ;incstack = 0
   707                           	opt	stack 7
   708                           ; Regs used in _Set_Duty: [wreg+status,2+status,0]
   709                           	line	43
   710                           	
   711                           l617:	
   712  0781                     ;main.c: 43:     if(Duty<1024){
   713                           	movlw	04h
   714  0781  3004               	subwf	(_Duty+1),w
   715  0782  0275               	movlw	0
   716  0783  3000               	skipnz
   717  0784  1903               	subwf	(_Duty),w
   718  0785  0274               	skipnc
   719  0786  1803               	goto	u11
   720  0787  2F89               	goto	u10
   721  0788  2F8A               u11:
   722  0789                     	goto	l44
   723  0789  2FA2               u10:
   724  078A                     	line	44
   725                           	
   726                           l619:	
   727  078A                     ;main.c: 44:         CCP1Y=Duty&1;
   728                           	btfsc	(_Duty),0
   729  078A  1874               	goto	u21
   730  078B  2F8D               	goto	u20
   731  078C  2F91               	
   732                           u21:
   733  078D                     	bcf	status, 5	;RP0=0, select bank0
   734  078D  1283               	bcf	status, 6	;RP1=0, select bank0
   735  078E  1303               	bsf	(188/8),(188)&7	;volatile
   736  078F  1617               	goto	u34
   737  0790  2F94               u20:
   738  0791                     	bcf	status, 5	;RP0=0, select bank0
   739  0791  1283               	bcf	status, 6	;RP1=0, select bank0
   740  0792  1303               	bcf	(188/8),(188)&7	;volatile
   741  0793  1217               u34:
   742  0794                     	line	45
   743                           ;main.c: 45:         CCP1X=Duty&2;
   744                           	bcf	(189/8),(189)&7	;volatile
   745  0794  1297               	line	46
   746                           	
   747                           l621:	
   748  0795                     ;main.c: 46:         CCPR1L=Duty>>2;
   749                           	movf	(_Duty+1),w
   750  0795  0875               	movwf	(??_Set_Duty+0)+0+1
   751  0796  00F1               	movf	(_Duty),w
   752  0797  0874               	movwf	(??_Set_Duty+0)+0
   753  0798  00F0               	clrc
   754  0799  1003               	rrf	(??_Set_Duty+0)+1,f
   755  079A  0CF1               	rrf	(??_Set_Duty+0)+0,f
   756  079B  0CF0               	clrc
   757  079C  1003               	rrf	(??_Set_Duty+0)+1,f
   758  079D  0CF1               	rrf	(??_Set_Duty+0)+0,f
   759  079E  0CF0               	movf	0+(??_Set_Duty+0)+0,w
   760  079F  0870               	movwf	(21)	;volatile
   761  07A0  0095               	goto	l44
   762  07A1  2FA2               	line	47
   763                           ;main.c: 47:     }
   764                           	
   765                           l43:	
   766  07A2                     	line	48
   767                           	
   768                           l44:	
   769  07A2                     	return
   770  07A2  0008               	opt stack 0
   771                           GLOBAL	__end_of_Set_Duty
   772                           	__end_of_Set_Duty:
   773  07A3                     	signat	_Set_Duty,89
   774                           global	___latbits
   775                           ___latbits	equ	0
   776  0000                     	global	btemp
   777                           	btemp set 07Eh
   778  007E                     
   779                           	DABS	1,126,2	;btemp
   780                           	global	wtemp0
   781                           	wtemp0 set btemp+0
   782  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Set_Duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              2 COMMON     2     2      0
                           _Set_Duty
 ---------------------------------------------------------------------------------
 (1) _Set_Duty                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Set_Duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       6      10        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Apr 23 06:49:35 2023

            __CFG_CP$OFF 0000                       l31 07B2                       l40 07FD  
                     l32 07C6                       l33 07B5                       l34 07D0  
                     l43 07A2                       l35 07EB                       l44 07A2  
                     l36 07DA                       l37 07F2                       l38 07FC  
                     l39 07FD                       u10 078A                       u11 0789  
                     u20 0791                       u21 078D                       u40 07CF  
                     u41 07CE                       u34 0794                       u50 07F1  
                     u51 07F0                       u67 07C0                       u77 07D4  
                     u87 07E5                       u97 07F6                      l621 0795  
                    l631 07B0                      l623 07A3                      l617 0781  
                    l641 07C6                      l633 07B2                      l625 07AA  
                    l619 078A                      l651 07EB                      l643 07D0  
                    l635 07B5                      l627 07AC                      l653 07F2  
                    l645 07DA                      l637 07B6                      l629 07AF  
                    l647 07DB                      l639 07BC                      l649 07E1  
                    _PR2 0092             __CFG_CPD$OFF 0000             __CFG_LVP$OFF 0000  
                   _Duty 0074                     _main 07A3                     btemp 007E  
                   start 0000                    ?_main 0070                    _CCP1X 00BD  
                  _CCP1Y 00BC            __CFG_WDTE$OFF 0000           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 07FE             __end_of_main 07FE                   ??_main 0072  
       __end_of_Set_Duty 07A3                   _CCP1M2 00BA                   _CCP1M3 00BB  
                 _CCPR1L 0015                   _TMR2ON 0092                   _TRISB3 0433  
         __CFG_PWRTE$OFF 0000  __end_of__initialization 07FE           __pcstackCOMMON 0070  
             __pnvCOMMON 0074                ?_Set_Duty 0070               __pmaintext 07A3  
                _T2CKPS0 0090                  _T2CKPS1 0091               ??_Set_Duty 0070  
                __ptext1 0781     end_of_initialization 07FE      start_initialization 07FE  
      __size_of_Set_Duty 0022                ___latbits 0000                 _Set_Duty 0781  
          __size_of_main 005B       __CFG_FOSC$INTOSCIO 0000  
