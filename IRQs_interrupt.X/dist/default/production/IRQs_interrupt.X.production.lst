

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Apr 09 02:23:35 2023

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F628A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   116                           TMR2 equ 011h ;# 
   117  0011                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   118                           T2CON equ 012h ;# 
   119  0012                     # 605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   120                           CCPR1 equ 015h ;# 
   121  0015                     # 612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   122                           CCPR1L equ 015h ;# 
   123  0015                     # 619 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   124                           CCPR1H equ 016h ;# 
   125  0016                     # 626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   126                           CCP1CON equ 017h ;# 
   127  0017                     # 684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   128                           RCSTA equ 018h ;# 
   129  0018                     # 755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   130                           TXREG equ 019h ;# 
   131  0019                     # 762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   132                           RCREG equ 01Ah ;# 
   133  001A                     # 769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   134                           CMCON equ 01Fh ;# 
   135  001F                     # 839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   136                           OPTION_REG equ 081h ;# 
   137  0081                     # 909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   138                           TRISA equ 085h ;# 
   139  0085                     # 971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   140                           TRISB equ 086h ;# 
   141  0086                     # 1033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   142                           PIE1 equ 08Ch ;# 
   143  008C                     # 1090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   144                           PCON equ 08Eh ;# 
   145  008E                     # 1139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   146                           PR2 equ 092h ;# 
   147  0092                     # 1146 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   148                           TXSTA equ 098h ;# 
   149  0098                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   150                           SPBRG equ 099h ;# 
   151  0099                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   152                           EEDATA equ 09Ah ;# 
   153  009A                     # 1217 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   154                           EEADR equ 09Bh ;# 
   155  009B                     # 1224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   156                           EECON1 equ 09Ch ;# 
   157  009C                     # 1262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   158                           EECON2 equ 09Dh ;# 
   159  009D                     # 1269 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   160                           VRCON equ 09Fh ;# 
   161  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   162                           INDF equ 00h ;# 
   163  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   164                           TMR0 equ 01h ;# 
   165  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   166                           PCL equ 02h ;# 
   167  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   168                           STATUS equ 03h ;# 
   169  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   170                           FSR equ 04h ;# 
   171  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   172                           PORTA equ 05h ;# 
   173  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   174                           PORTB equ 06h ;# 
   175  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   176                           PCLATH equ 0Ah ;# 
   177  000A                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   178                           INTCON equ 0Bh ;# 
   179  000B                     # 390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   180                           PIR1 equ 0Ch ;# 
   181  000C                     # 447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   182                           TMR1 equ 0Eh ;# 
   183  000E                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   184                           TMR1L equ 0Eh ;# 
   185  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   186                           TMR1H equ 0Fh ;# 
   187  000F                     # 468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   188                           T1CON equ 010h ;# 
   189  0010                     # 527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   190                           TMR2 equ 011h ;# 
   191  0011                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   192                           T2CON equ 012h ;# 
   193  0012                     # 605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   194                           CCPR1 equ 015h ;# 
   195  0015                     # 612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   196                           CCPR1L equ 015h ;# 
   197  0015                     # 619 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   198                           CCPR1H equ 016h ;# 
   199  0016                     # 626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   200                           CCP1CON equ 017h ;# 
   201  0017                     # 684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   202                           RCSTA equ 018h ;# 
   203  0018                     # 755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   204                           TXREG equ 019h ;# 
   205  0019                     # 762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   206                           RCREG equ 01Ah ;# 
   207  001A                     # 769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   208                           CMCON equ 01Fh ;# 
   209  001F                     # 839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   210                           OPTION_REG equ 081h ;# 
   211  0081                     # 909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   212                           TRISA equ 085h ;# 
   213  0085                     # 971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   214                           TRISB equ 086h ;# 
   215  0086                     # 1033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   216                           PIE1 equ 08Ch ;# 
   217  008C                     # 1090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   218                           PCON equ 08Eh ;# 
   219  008E                     # 1139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   220                           PR2 equ 092h ;# 
   221  0092                     # 1146 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   222                           TXSTA equ 098h ;# 
   223  0098                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   224                           SPBRG equ 099h ;# 
   225  0099                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   226                           EEDATA equ 09Ah ;# 
   227  009A                     # 1217 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   228                           EEADR equ 09Bh ;# 
   229  009B                     # 1224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   230                           EECON1 equ 09Ch ;# 
   231  009C                     # 1262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   232                           EECON2 equ 09Dh ;# 
   233  009D                     # 1269 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   234                           VRCON equ 09Fh ;# 
   235  009F                     	FNROOT	_main
   236                           	FNCALL	intlevel1,_ISR
   237                           	global	intlevel1
   238                           	FNROOT	intlevel1
   239                           	global	_PORTA
   240                           _PORTA	set	0x5
   241  0005                     	global	_RA1
   242                           _RA1	set	0x29
   243  0029                     	global	_INTF
   244                           _INTF	set	0x59
   245  0059                     	global	_RA0
   246                           _RA0	set	0x28
   247  0028                     	global	_INTE
   248                           _INTE	set	0x5C
   249  005C                     	global	_GIE
   250                           _GIE	set	0x5F
   251  005F                     	global	_TRISA
   252                           _TRISA	set	0x85
   253  0085                     	global	_INTEDG
   254                           _INTEDG	set	0x40E
   255  040E                     	global	_TRISB0
   256                           _TRISB0	set	0x430
   257  0430                     ; #config settings
   258                           global __CFG_FOSC$XT
   259                           __CFG_FOSC$XT equ 0x0
   260  0000                     global __CFG_WDTE$OFF
   261                           __CFG_WDTE$OFF equ 0x0
   262  0000                     global __CFG_PWRTE$ON
   263                           __CFG_PWRTE$ON equ 0x0
   264  0000                     global __CFG_MCLRE$OFF
   265                           __CFG_MCLRE$OFF equ 0x0
   266  0000                     global __CFG_BOREN$ON
   267                           __CFG_BOREN$ON equ 0x0
   268  0000                     global __CFG_LVP$OFF
   269                           __CFG_LVP$OFF equ 0x0
   270  0000                     global __CFG_CPD$OFF
   271                           __CFG_CPD$OFF equ 0x0
   272  0000                     global __CFG_CP$OFF
   273                           __CFG_CP$OFF equ 0x0
   274  0000                     	file	"C:\Users\Mostafa\AppData\Local\Temp\sb3g."
   275                           	line	#
   276                           psect cinit,class=CODE,delta=2
   277                           global start_initialization
   278                           start_initialization:
   279  000B                     
   280                           global __initialization
   281                           __initialization:
   282  000B                     psect cinit,class=CODE,delta=2,merge=1
   283                           global end_of_initialization,__end_of__initialization
   284                           
   285                           ;End of C runtime variable initialization code
   286                           
   287                           end_of_initialization:
   288  000B                     __end_of__initialization:
   289  000B                     clrf status
   290  000B  0183               ljmp _main	;jump to C main() function
   291  000C  280D               psect	cstackCOMMON,class=COMMON,space=1,noexec
   292                           global __pcstackCOMMON
   293                           __pcstackCOMMON:
   294  0070                     ?_main:	; 1 bytes @ 0x0
   295  0070                     ?_ISR:	; 1 bytes @ 0x0
   296  0070                     ??_ISR:	; 1 bytes @ 0x0
   297  0070                     	ds	2
   298  0070                     ??_main:	; 1 bytes @ 0x2
   299  0072                     	ds	3
   300  0072                     ;!
   301                           ;!Data Sizes:
   302                           ;!    Strings     0
   303                           ;!    Constant    0
   304                           ;!    Data        0
   305                           ;!    BSS         0
   306                           ;!    Persistent  0
   307                           ;!    Stack       0
   308                           ;!
   309                           ;!Auto Spaces:
   310                           ;!    Space          Size  Autos    Used
   311                           ;!    COMMON           14      5       5
   312                           ;!    BANK0            80      0       0
   313                           ;!    BANK1            80      0       0
   314                           ;!    BANK2            48      0       0
   315                           
   316                           ;!
   317                           ;!Pointer List with Targets:
   318                           ;!
   319                           ;!    None.
   320                           
   321                           
   322                           ;!
   323                           ;!Critical Paths under _main in COMMON
   324                           ;!
   325                           ;!    None.
   326                           ;!
   327                           ;!Critical Paths under _ISR in COMMON
   328                           ;!
   329                           ;!    None.
   330                           ;!
   331                           ;!Critical Paths under _main in BANK0
   332                           ;!
   333                           ;!    None.
   334                           ;!
   335                           ;!Critical Paths under _ISR in BANK0
   336                           ;!
   337                           ;!    None.
   338                           ;!
   339                           ;!Critical Paths under _main in BANK1
   340                           ;!
   341                           ;!    None.
   342                           ;!
   343                           ;!Critical Paths under _ISR in BANK1
   344                           ;!
   345                           ;!    None.
   346                           ;!
   347                           ;!Critical Paths under _main in BANK2
   348                           ;!
   349                           ;!    None.
   350                           ;!
   351                           ;!Critical Paths under _ISR in BANK2
   352                           ;!
   353                           ;!    None.
   354                           
   355 ;;
   356 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   357 ;;
   358                           
   359                           ;!
   360                           ;!Call Graph Tables:
   361                           ;!
   362                           ;! ---------------------------------------------------------------------------------
   363                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   364                           ;! ---------------------------------------------------------------------------------
   365                           ;! (0) _main                                                 3     3      0       0
   366                           ;!                                              2 COMMON     3     3      0
   367                           ;! ---------------------------------------------------------------------------------
   368                           ;! Estimated maximum stack depth 0
   369                           ;! ---------------------------------------------------------------------------------
   370                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   371                           ;! ---------------------------------------------------------------------------------
   372                           ;! (1) _ISR                                                  2     2      0       0
   373                           ;!                                              0 COMMON     2     2      0
   374                           ;! ---------------------------------------------------------------------------------
   375                           ;! Estimated maximum stack depth 1
   376                           ;! ---------------------------------------------------------------------------------
   377                           ;!
   378                           ;! Call Graph Graphs:
   379                           ;!
   380                           ;! _main (ROOT)
   381                           ;!
   382                           ;! _ISR (ROOT)
   383                           ;!
   384                           
   385                           ;! Address spaces:
   386                           
   387                           ;!Name               Size   Autos  Total    Cost      Usage
   388                           ;!BITCOMMON            E      0       0       0        0.0%
   389                           ;!EEDATA              80      0       0       0        0.0%
   390                           ;!NULL                 0      0       0       0        0.0%
   391                           ;!CODE                 0      0       0       0        0.0%
   392                           ;!COMMON               E      5       5       1       35.7%
   393                           ;!BITSFR0              0      0       0       1        0.0%
   394                           ;!SFR0                 0      0       0       1        0.0%
   395                           ;!BITSFR1              0      0       0       2        0.0%
   396                           ;!SFR1                 0      0       0       2        0.0%
   397                           ;!STACK                0      0       0       2        0.0%
   398                           ;!BANK0               50      0       0       3        0.0%
   399                           ;!BITSFR3              0      0       0       4        0.0%
   400                           ;!SFR3                 0      0       0       4        0.0%
   401                           ;!ABS                  0      0       0       4        0.0%
   402                           ;!BITBANK0            50      0       0       5        0.0%
   403                           ;!BITSFR2              0      0       0       5        0.0%
   404                           ;!SFR2                 0      0       0       5        0.0%
   405                           ;!BITBANK1            50      0       0       6        0.0%
   406                           ;!BANK1               50      0       0       7        0.0%
   407                           ;!BITBANK2            30      0       0       8        0.0%
   408                           ;!BANK2               30      0       0       9        0.0%
   409                           ;!DATA                 0      0       0      10        0.0%
   410                           
   411                           	global	_main
   412                           
   413 ;; *************** function _main *****************
   414 ;; Defined at:
   415 ;;		line 13 in file "main.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0
   424 ;; Tracked objects:
   425 ;;		On entry : B00/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   429 ;;      Params:         0       0       0       0
   430 ;;      Locals:         0       0       0       0
   431 ;;      Temps:          3       0       0       0
   432 ;;      Totals:         3       0       0       0
   433 ;;Total ram usage:        3 bytes
   434 ;; Hardware stack levels required when called:    1
   435 ;; This function calls:
   436 ;;		Nothing
   437 ;; This function is called by:
   438 ;;		Startup code after reset
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   442                           	file	"main.c"
   443                           	line	13
   444                           global __pmaintext
   445                           __pmaintext:	;psect for function _main
   446  000D                     psect	maintext
   447                           	file	"main.c"
   448                           	line	13
   449                           	global	__size_of_main
   450                           	__size_of_main	equ	__end_of_main-_main
   451  0033                     	
   452                           _main:	
   453  000D                     ;incstack = 0
   454                           	opt	stack 7
   455                           ; Regs used in _main: [wreg+status,2+status,0]
   456                           	line	14
   457                           	
   458                           l607:	
   459  000D                     ;main.c: 14:     TRISA&=0b11111100;
   460                           	movlw	low(0FCh)
   461  000D  30FC               	movwf	(??_main+0)+0
   462  000E  00F2               	movf	(??_main+0)+0,w
   463  000F  0872               	bsf	status, 5	;RP0=1, select bank1
   464  0010  1683               	bcf	status, 6	;RP1=0, select bank1
   465  0011  1303               	andwf	(133)^080h,f	;volatile
   466  0012  0585               	line	15
   467                           	
   468                           l609:	
   469  0013                     ;main.c: 15:     PORTA=0x00;
   470                           	bcf	status, 5	;RP0=0, select bank0
   471  0013  1283               	bcf	status, 6	;RP1=0, select bank0
   472  0014  1303               	clrf	(5)	;volatile
   473  0015  0185               	line	16
   474                           	
   475                           l611:	
   476  0016                     ;main.c: 16:     TRISB0=1;
   477                           	bsf	status, 5	;RP0=1, select bank1
   478  0016  1683               	bcf	status, 6	;RP1=0, select bank1
   479  0017  1303               	bsf	(1072/8)^080h,(1072)&7	;volatile
   480  0018  1406               	line	17
   481                           	
   482                           l613:	
   483  0019                     ;main.c: 17:     GIE=1;
   484                           	bsf	(95/8),(95)&7	;volatile
   485  0019  178B               	line	18
   486                           	
   487                           l615:	
   488  001A                     ;main.c: 18:     INTE=1;
   489                           	bsf	(92/8),(92)&7	;volatile
   490  001A  160B               	line	19
   491                           	
   492                           l617:	
   493  001B                     ;main.c: 19:     INTEDG=1;
   494                           	bsf	(1038/8)^080h,(1038)&7	;volatile
   495  001B  1701               	goto	l619
   496  001C  281D               	line	20
   497                           ;main.c: 20:     while(1){
   498                           	
   499                           l25:	
   500  001D                     	line	21
   501                           	
   502                           l619:	
   503  001D                     ;main.c: 21:         RA0=1;
   504                           	bcf	status, 5	;RP0=0, select bank0
   505  001D  1283               	bcf	status, 6	;RP1=0, select bank0
   506  001E  1303               	bsf	(40/8),(40)&7	;volatile
   507  001F  1405               	line	22
   508                           	
   509                           l621:	
   510  0020                     ;main.c: 22:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   511                           	opt asmopt_push
   512                           opt asmopt_off
   513                           movlw  6
   514  0020  3006               movwf	((??_main+0)+0+2),f
   515  0021  00F4               movlw	19
   516  0022  3013               movwf	((??_main+0)+0+1),f
   517  0023  00F3               	movlw	173
   518  0024  30AD               movwf	((??_main+0)+0),f
   519  0025  00F2               	u27:
   520  0026                     decfsz	((??_main+0)+0),f
   521  0026  0BF2               	goto	u27
   522  0027  2826               	decfsz	((??_main+0)+0+1),f
   523  0028  0BF3               	goto	u27
   524  0029  2826               	decfsz	((??_main+0)+0+2),f
   525  002A  0BF4               	goto	u27
   526  002B  2826               	nop2
   527  002C  282D               opt asmopt_pop
   528                           
   529                           	line	23
   530                           	
   531                           l623:	
   532  002D                     ;main.c: 23:         RA0=0;
   533                           	bcf	status, 5	;RP0=0, select bank0
   534  002D  1283               	bcf	status, 6	;RP1=0, select bank0
   535  002E  1303               	bcf	(40/8),(40)&7	;volatile
   536  002F  1005               	line	24
   537                           	
   538                           l625:	
   539  0030                     ;main.c: 24:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   540                           	opt asmopt_push
   541                           opt asmopt_off
   542                           movlw  6
   543  0030  3006               movwf	((??_main+0)+0+2),f
   544  0031  00F4               movlw	19
   545  0032  3013               movwf	((??_main+0)+0+1),f
   546  0033  00F3               	movlw	173
   547  0034  30AD               movwf	((??_main+0)+0),f
   548  0035  00F2               	u37:
   549  0036                     decfsz	((??_main+0)+0),f
   550  0036  0BF2               	goto	u37
   551  0037  2836               	decfsz	((??_main+0)+0+1),f
   552  0038  0BF3               	goto	u37
   553  0039  2836               	decfsz	((??_main+0)+0+2),f
   554  003A  0BF4               	goto	u37
   555  003B  2836               	nop2
   556  003C  283D               opt asmopt_pop
   557                           
   558                           	goto	l619
   559  003D  281D               	line	25
   560                           ;main.c: 25:     }
   561                           	
   562                           l26:	
   563  003E                     	goto	l619
   564  003E  281D               	
   565                           l27:	
   566  003F                     	line	27
   567                           ;main.c: 26:     return;
   568                           	
   569                           l28:	
   570  003F                     	global	start
   571                           	ljmp	start
   572  003F  280A               	opt stack 0
   573                           GLOBAL	__end_of_main
   574                           	__end_of_main:
   575  0040                     	signat	_main,89
   576                           	global	_ISR
   577                           
   578 ;; *************** function _ISR *****************
   579 ;; Defined at:
   580 ;;		line 29 in file "main.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   594 ;;      Params:         0       0       0       0
   595 ;;      Locals:         0       0       0       0
   596 ;;      Temps:          2       0       0       0
   597 ;;      Totals:         2       0       0       0
   598 ;;Total ram usage:        2 bytes
   599 ;; Hardware stack levels used:    1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		Interrupt level 1
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   607                           	line	29
   608                           global __ptext1
   609                           __ptext1:	;psect for function _ISR
   610  0040                     psect	text1
   611                           	file	"main.c"
   612                           	line	29
   613                           	global	__size_of_ISR
   614                           	__size_of_ISR	equ	__end_of_ISR-_ISR
   615  0011                     	
   616                           _ISR:	
   617  0040                     ;incstack = 0
   618                           	opt	stack 7
   619                           ; Regs used in _ISR: [wreg]
   620                           psect	intentry,class=CODE,delta=2
   621                           global __pintentry
   622                           __pintentry:
   623  0004                     global interrupt_function
   624                           interrupt_function:
   625  0004                     	global saved_w
   626                           	saved_w	set	btemp+0
   627  007E                     	movwf	saved_w
   628  0004  00FE               	swapf	status,w
   629  0005  0E03               	movwf	(??_ISR+0)
   630  0006  00F0               	movf	pclath,w
   631  0007  080A               	movwf	(??_ISR+1)
   632  0008  00F1               	ljmp	_ISR
   633  0009  2840               psect	text1
   634                           	line	30
   635                           	
   636                           i1l627:	
   637  0040                     ;main.c: 30:     if(INTF){
   638                           	btfss	(89/8),(89)&7	;volatile
   639  0040  1C8B               	goto	u1_21
   640  0041  2843               	goto	u1_20
   641  0042  2844               u1_21:
   642  0043                     	goto	i1l34
   643  0043  284A               u1_20:
   644  0044                     	line	31
   645                           	
   646                           i1l629:	
   647  0044                     ;main.c: 31:         RA1=~RA1;
   648                           	movlw	1<<((41)&7)
   649  0044  3002               	bcf	status, 5	;RP0=0, select bank0
   650  0045  1283               	bcf	status, 6	;RP1=0, select bank0
   651  0046  1303               	xorwf	((41)/8),f
   652  0047  0685               	line	32
   653                           	
   654                           i1l631:	
   655  0048                     ;main.c: 32:         INTF=0;
   656                           	bcf	(89/8),(89)&7	;volatile
   657  0048  108B               	goto	i1l34
   658  0049  284A               	line	33
   659                           ;main.c: 33:     }
   660                           	
   661                           i1l33:	
   662  004A                     	line	34
   663                           	
   664                           i1l34:	
   665  004A                     	movf	(??_ISR+1),w
   666  004A  0871               	movwf	pclath
   667  004B  008A               	swapf	(??_ISR+0)^0FFFFFF80h,w
   668  004C  0E70               	movwf	status
   669  004D  0083               	swapf	saved_w,f
   670  004E  0EFE               	swapf	saved_w,w
   671  004F  0E7E               	retfie
   672  0050  0009               	opt stack 0
   673                           GLOBAL	__end_of_ISR
   674                           	__end_of_ISR:
   675  0051                     	signat	_ISR,89
   676                           global	___latbits
   677                           ___latbits	equ	0
   678  0000                     	global	btemp
   679                           	btemp set 07Eh
   680  007E                     
   681                           	DABS	1,126,2	;btemp
   682                           	global	wtemp0
   683                           	wtemp0 set btemp+0
   684  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Apr 09 02:23:35 2023

            __CFG_CP$OFF 0000                       l25 001D                       l26 003E  
                     l27 003F                       l28 003F                       u27 0026  
                     u37 0036                      l611 0016                      l621 0020  
                    l613 0019                      l623 002D                      l615 001A  
                    l607 000D                      l625 0030                      l617 001B  
                    l609 0013                      l619 001D                      _GIE 005F  
                    _RA0 0028                      _RA1 0029             __CFG_CPD$OFF 0000  
                    _ISR 0040             __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000  
                   ?_ISR 0070                     _INTE 005C                     _INTF 0059  
                   i1l33 004A                     i1l34 004A                     u1_20 0044  
                   u1_21 0043                     _main 000D                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 000A                    ??_ISR 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    i1l631 0048  
                  i1l627 0040                    i1l629 0044                    _PORTA 0005  
                  _TRISA 0085            __CFG_PWRTE$ON 0000                    pclath 000A  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 000B             __end_of_main 0040                   ??_main 0072  
                 _INTEDG 040E                   _TRISB0 0430                   saved_w 007E  
__end_of__initialization 000B           __pcstackCOMMON 0070               __pmaintext 000D  
             __pintentry 0004                  __ptext1 0040             __size_of_ISR 0011  
   end_of_initialization 000B      start_initialization 000B              __end_of_ISR 0051  
              ___latbits 0000        interrupt_function 0004            __size_of_main 0033  
               intlevel1 0000  
