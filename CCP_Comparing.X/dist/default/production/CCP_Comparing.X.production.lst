

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Apr 21 07:08:54 2023

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F628A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   116                           TMR2 equ 011h ;# 
   117  0011                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   118                           T2CON equ 012h ;# 
   119  0012                     # 605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   120                           CCPR1 equ 015h ;# 
   121  0015                     # 612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   122                           CCPR1L equ 015h ;# 
   123  0015                     # 619 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   124                           CCPR1H equ 016h ;# 
   125  0016                     # 626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   126                           CCP1CON equ 017h ;# 
   127  0017                     # 684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   128                           RCSTA equ 018h ;# 
   129  0018                     # 755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   130                           TXREG equ 019h ;# 
   131  0019                     # 762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   132                           RCREG equ 01Ah ;# 
   133  001A                     # 769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   134                           CMCON equ 01Fh ;# 
   135  001F                     # 839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   136                           OPTION_REG equ 081h ;# 
   137  0081                     # 909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   138                           TRISA equ 085h ;# 
   139  0085                     # 971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   140                           TRISB equ 086h ;# 
   141  0086                     # 1033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   142                           PIE1 equ 08Ch ;# 
   143  008C                     # 1090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   144                           PCON equ 08Eh ;# 
   145  008E                     # 1139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   146                           PR2 equ 092h ;# 
   147  0092                     # 1146 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   148                           TXSTA equ 098h ;# 
   149  0098                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   150                           SPBRG equ 099h ;# 
   151  0099                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   152                           EEDATA equ 09Ah ;# 
   153  009A                     # 1217 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   154                           EEADR equ 09Bh ;# 
   155  009B                     # 1224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   156                           EECON1 equ 09Ch ;# 
   157  009C                     # 1262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   158                           EECON2 equ 09Dh ;# 
   159  009D                     # 1269 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   160                           VRCON equ 09Fh ;# 
   161  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   162                           INDF equ 00h ;# 
   163  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   164                           TMR0 equ 01h ;# 
   165  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   166                           PCL equ 02h ;# 
   167  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   168                           STATUS equ 03h ;# 
   169  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   170                           FSR equ 04h ;# 
   171  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   172                           PORTA equ 05h ;# 
   173  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   174                           PORTB equ 06h ;# 
   175  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   176                           PCLATH equ 0Ah ;# 
   177  000A                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   178                           INTCON equ 0Bh ;# 
   179  000B                     # 390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   180                           PIR1 equ 0Ch ;# 
   181  000C                     # 447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   182                           TMR1 equ 0Eh ;# 
   183  000E                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   184                           TMR1L equ 0Eh ;# 
   185  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   186                           TMR1H equ 0Fh ;# 
   187  000F                     # 468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   188                           T1CON equ 010h ;# 
   189  0010                     # 527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   190                           TMR2 equ 011h ;# 
   191  0011                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   192                           T2CON equ 012h ;# 
   193  0012                     # 605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   194                           CCPR1 equ 015h ;# 
   195  0015                     # 612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   196                           CCPR1L equ 015h ;# 
   197  0015                     # 619 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   198                           CCPR1H equ 016h ;# 
   199  0016                     # 626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   200                           CCP1CON equ 017h ;# 
   201  0017                     # 684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   202                           RCSTA equ 018h ;# 
   203  0018                     # 755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   204                           TXREG equ 019h ;# 
   205  0019                     # 762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   206                           RCREG equ 01Ah ;# 
   207  001A                     # 769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   208                           CMCON equ 01Fh ;# 
   209  001F                     # 839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   210                           OPTION_REG equ 081h ;# 
   211  0081                     # 909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   212                           TRISA equ 085h ;# 
   213  0085                     # 971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   214                           TRISB equ 086h ;# 
   215  0086                     # 1033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   216                           PIE1 equ 08Ch ;# 
   217  008C                     # 1090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   218                           PCON equ 08Eh ;# 
   219  008E                     # 1139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   220                           PR2 equ 092h ;# 
   221  0092                     # 1146 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   222                           TXSTA equ 098h ;# 
   223  0098                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   224                           SPBRG equ 099h ;# 
   225  0099                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   226                           EEDATA equ 09Ah ;# 
   227  009A                     # 1217 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   228                           EEADR equ 09Bh ;# 
   229  009B                     # 1224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   230                           EECON1 equ 09Ch ;# 
   231  009C                     # 1262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   232                           EECON2 equ 09Dh ;# 
   233  009D                     # 1269 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   234                           VRCON equ 09Fh ;# 
   235  009F                     	FNROOT	_main
   236                           	FNCALL	_ISR,___awmod
   237                           	FNCALL	intlevel1,_ISR
   238                           	global	intlevel1
   239                           	FNROOT	intlevel1
   240                           	global	_counter
   241                           	global	_CCPR1
   242                           _CCPR1	set	0x15
   243  0015                     	global	_TMR1
   244                           _TMR1	set	0xE
   245  000E                     	global	_CCP1IF
   246                           _CCP1IF	set	0x62
   247  0062                     	global	_PEIE
   248                           _PEIE	set	0x5E
   249  005E                     	global	_GIE
   250                           _GIE	set	0x5F
   251  005F                     	global	_CCP1M3
   252                           _CCP1M3	set	0xBB
   253  00BB                     	global	_CCP1M2
   254                           _CCP1M2	set	0xBA
   255  00BA                     	global	_CCP1M1
   256                           _CCP1M1	set	0xB9
   257  00B9                     	global	_CCP1M0
   258                           _CCP1M0	set	0xB8
   259  00B8                     	global	_TMR1ON
   260                           _TMR1ON	set	0x80
   261  0080                     	global	_TMR1CS
   262                           _TMR1CS	set	0x81
   263  0081                     	global	_T1CKPS1
   264                           _T1CKPS1	set	0x85
   265  0085                     	global	_T1CKPS0
   266                           _T1CKPS0	set	0x84
   267  0084                     	global	_RB6
   268                           _RB6	set	0x36
   269  0036                     	global	_CCP1IE
   270                           _CCP1IE	set	0x462
   271  0462                     	global	_TRISB6
   272                           _TRISB6	set	0x436
   273  0436                     ; #config settings
   274                           global __CFG_FOSC$XT
   275                           __CFG_FOSC$XT equ 0x0
   276  0000                     global __CFG_WDTE$OFF
   277                           __CFG_WDTE$OFF equ 0x0
   278  0000                     global __CFG_PWRTE$ON
   279                           __CFG_PWRTE$ON equ 0x0
   280  0000                     global __CFG_MCLRE$OFF
   281                           __CFG_MCLRE$OFF equ 0x0
   282  0000                     global __CFG_BOREN$ON
   283                           __CFG_BOREN$ON equ 0x0
   284  0000                     global __CFG_LVP$OFF
   285                           __CFG_LVP$OFF equ 0x0
   286  0000                     global __CFG_CPD$OFF
   287                           __CFG_CPD$OFF equ 0x0
   288  0000                     global __CFG_CP$OFF
   289                           __CFG_CP$OFF equ 0x0
   290  0000                     	file	"C:\Users\Mostafa\AppData\Local\Temp\sd5k."
   291                           	line	#
   292                           psect cinit,class=CODE,delta=2
   293                           global start_initialization
   294                           start_initialization:
   295  000B                     
   296                           global __initialization
   297                           __initialization:
   298  000B                     psect	bssCOMMON,class=COMMON,space=1,noexec
   299                           global __pbssCOMMON
   300                           __pbssCOMMON:
   301  007C                     _counter:
   302  007C                            ds      1
   303  007C                     
   304                           	file	"C:\Users\Mostafa\AppData\Local\Temp\sd5k."
   305                           	line	#
   306                           ; Clear objects allocated to COMMON
   307                           psect cinit,class=CODE,delta=2,merge=1
   308                           	clrf	((__pbssCOMMON)+0)&07Fh
   309  000B  01FC               psect cinit,class=CODE,delta=2,merge=1
   310                           global end_of_initialization,__end_of__initialization
   311                           
   312                           ;End of C runtime variable initialization code
   313                           
   314                           end_of_initialization:
   315  000C                     __end_of__initialization:
   316  000C                     clrf status
   317  000C  0183               ljmp _main	;jump to C main() function
   318  000D  289C               psect	cstackCOMMON,class=COMMON,space=1,noexec
   319                           global __pcstackCOMMON
   320                           __pcstackCOMMON:
   321  0070                     ?_main:	; 1 bytes @ 0x0
   322  0070                     ?_ISR:	; 1 bytes @ 0x0
   323  0070                     	global	?___awmod
   324                           ?___awmod:	; 2 bytes @ 0x0
   325  0070                     	global	___awmod@divisor
   326                           ___awmod@divisor:	; 2 bytes @ 0x0
   327  0070                     	ds	2
   328  0070                     	global	___awmod@dividend
   329                           ___awmod@dividend:	; 2 bytes @ 0x2
   330  0072                     	ds	2
   331  0072                     ??___awmod:	; 1 bytes @ 0x4
   332  0074                     	ds	1
   333  0074                     	global	___awmod@counter
   334                           ___awmod@counter:	; 1 bytes @ 0x5
   335  0075                     	ds	1
   336  0075                     	global	___awmod@sign
   337                           ___awmod@sign:	; 1 bytes @ 0x6
   338  0076                     	ds	1
   339  0076                     ??_ISR:	; 1 bytes @ 0x7
   340  0077                     	ds	5
   341  0077                     psect	cstackBANK0,class=BANK0,space=1,noexec
   342                           global __pcstackBANK0
   343                           __pcstackBANK0:
   344  0000                     ??_main:	; 1 bytes @ 0x0
   345  0000                     ;!
   346                           ;!Data Sizes:
   347                           ;!    Strings     0
   348                           ;!    Constant    0
   349                           ;!    Data        0
   350                           ;!    BSS         1
   351                           ;!    Persistent  0
   352                           ;!    Stack       0
   353                           ;!
   354                           ;!Auto Spaces:
   355                           ;!    Space          Size  Autos    Used
   356                           ;!    COMMON           14     12      13
   357                           ;!    BANK0            80      0       0
   358                           ;!    BANK1            80      0       0
   359                           ;!    BANK2            48      0       0
   360                           
   361                           ;!
   362                           ;!Pointer List with Targets:
   363                           ;!
   364                           ;!    None.
   365                           
   366                           
   367                           ;!
   368                           ;!Critical Paths under _main in COMMON
   369                           ;!
   370                           ;!    None.
   371                           ;!
   372                           ;!Critical Paths under _ISR in COMMON
   373                           ;!
   374                           ;!    _ISR->___awmod
   375                           ;!
   376                           ;!Critical Paths under _main in BANK0
   377                           ;!
   378                           ;!    None.
   379                           ;!
   380                           ;!Critical Paths under _ISR in BANK0
   381                           ;!
   382                           ;!    None.
   383                           ;!
   384                           ;!Critical Paths under _main in BANK1
   385                           ;!
   386                           ;!    None.
   387                           ;!
   388                           ;!Critical Paths under _ISR in BANK1
   389                           ;!
   390                           ;!    None.
   391                           ;!
   392                           ;!Critical Paths under _main in BANK2
   393                           ;!
   394                           ;!    None.
   395                           ;!
   396                           ;!Critical Paths under _ISR in BANK2
   397                           ;!
   398                           ;!    None.
   399                           
   400 ;;
   401 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   402 ;;
   403                           
   404                           ;!
   405                           ;!Call Graph Tables:
   406                           ;!
   407                           ;! ---------------------------------------------------------------------------------
   408                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   409                           ;! ---------------------------------------------------------------------------------
   410                           ;! (0) _main                                                 0     0      0       0
   411                           ;! ---------------------------------------------------------------------------------
   412                           ;! Estimated maximum stack depth 0
   413                           ;! ---------------------------------------------------------------------------------
   414                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   415                           ;! ---------------------------------------------------------------------------------
   416                           ;! (1) _ISR                                                  5     5      0     448
   417                           ;!                                              7 COMMON     5     5      0
   418                           ;!                            ___awmod
   419                           ;! ---------------------------------------------------------------------------------
   420                           ;! (2) ___awmod                                              7     3      4     448
   421                           ;!                                              0 COMMON     7     3      4
   422                           ;! ---------------------------------------------------------------------------------
   423                           ;! Estimated maximum stack depth 2
   424                           ;! ---------------------------------------------------------------------------------
   425                           ;!
   426                           ;! Call Graph Graphs:
   427                           ;!
   428                           ;! _main (ROOT)
   429                           ;!
   430                           ;! _ISR (ROOT)
   431                           ;!   ___awmod
   432                           ;!
   433                           
   434                           ;! Address spaces:
   435                           
   436                           ;!Name               Size   Autos  Total    Cost      Usage
   437                           ;!BITCOMMON            E      0       0       0        0.0%
   438                           ;!EEDATA              80      0       0       0        0.0%
   439                           ;!NULL                 0      0       0       0        0.0%
   440                           ;!CODE                 0      0       0       0        0.0%
   441                           ;!COMMON               E      C       D       1       92.9%
   442                           ;!BITSFR0              0      0       0       1        0.0%
   443                           ;!SFR0                 0      0       0       1        0.0%
   444                           ;!BITSFR1              0      0       0       2        0.0%
   445                           ;!SFR1                 0      0       0       2        0.0%
   446                           ;!STACK                0      0       0       2        0.0%
   447                           ;!BANK0               50      0       0       3        0.0%
   448                           ;!BITSFR3              0      0       0       4        0.0%
   449                           ;!SFR3                 0      0       0       4        0.0%
   450                           ;!ABS                  0      0       D       4        0.0%
   451                           ;!BITBANK0            50      0       0       5        0.0%
   452                           ;!BITSFR2              0      0       0       5        0.0%
   453                           ;!SFR2                 0      0       0       5        0.0%
   454                           ;!BITBANK1            50      0       0       6        0.0%
   455                           ;!BANK1               50      0       0       7        0.0%
   456                           ;!BITBANK2            30      0       0       8        0.0%
   457                           ;!BANK2               30      0       0       9        0.0%
   458                           ;!DATA                 0      0       D      10        0.0%
   459                           
   460                           	global	_main
   461                           
   462 ;; *************** function _main *****************
   463 ;; Defined at:
   464 ;;		line 14 in file "main.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		status,2
   473 ;; Tracked objects:
   474 ;;		On entry : B00/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   478 ;;      Params:         0       0       0       0
   479 ;;      Locals:         0       0       0       0
   480 ;;      Temps:          0       0       0       0
   481 ;;      Totals:         0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels required when called:    2
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   491                           	file	"main.c"
   492                           	line	14
   493                           global __pmaintext
   494                           __pmaintext:	;psect for function _main
   495  009C                     psect	maintext
   496                           	file	"main.c"
   497                           	line	14
   498                           	global	__size_of_main
   499                           	__size_of_main	equ	__end_of_main-_main
   500  001B                     	
   501                           _main:	
   502  009C                     ;incstack = 0
   503                           	opt	stack 6
   504                           ; Regs used in _main: [status,2]
   505                           	line	15
   506                           	
   507                           l735:	
   508  009C                     ;main.c: 15:     TRISB6=0;
   509                           	bsf	status, 5	;RP0=1, select bank1
   510  009C  1683               	bcf	status, 6	;RP1=0, select bank1
   511  009D  1303               	bcf	(1078/8)^080h,(1078)&7	;volatile
   512  009E  1306               	line	16
   513                           ;main.c: 16:     RB6=0;
   514                           	bcf	status, 5	;RP0=0, select bank0
   515  009F  1283               	bcf	status, 6	;RP1=0, select bank0
   516  00A0  1303               	bcf	(54/8),(54)&7	;volatile
   517  00A1  1306               	line	17
   518                           	
   519                           l737:	
   520  00A2                     ;main.c: 17:     TMR1=0;
   521                           	clrf	(14)	;volatile
   522  00A2  018E               	clrf	(14+1)	;volatile
   523  00A3  018F               	line	19
   524                           	
   525                           l739:	
   526  00A4                     ;main.c: 19:     T1CKPS0=0;
   527                           	bcf	(132/8),(132)&7	;volatile
   528  00A4  1210               	line	20
   529                           	
   530                           l741:	
   531  00A5                     ;main.c: 20:     T1CKPS1=0;
   532                           	bcf	(133/8),(133)&7	;volatile
   533  00A5  1290               	line	21
   534                           	
   535                           l743:	
   536  00A6                     ;main.c: 21:     TMR1CS=0;
   537                           	bcf	(129/8),(129)&7	;volatile
   538  00A6  1090               	line	22
   539                           	
   540                           l745:	
   541  00A7                     ;main.c: 22:     TMR1ON=1;
   542                           	bsf	(128/8),(128)&7	;volatile
   543  00A7  1410               	line	24
   544                           	
   545                           l747:	
   546  00A8                     ;main.c: 24:     CCPR1=50000;
   547                           	movlw	0C3h
   548  00A8  30C3               	movwf	(21+1)	;volatile
   549  00A9  0096               	movlw	050h
   550  00AA  3050               	movwf	(21)	;volatile
   551  00AB  0095               	line	26
   552                           	
   553                           l749:	
   554  00AC                     ;main.c: 26:     CCP1M0=1;
   555                           	bsf	(184/8),(184)&7	;volatile
   556  00AC  1417               	line	27
   557                           	
   558                           l751:	
   559  00AD                     ;main.c: 27:     CCP1M1=1;
   560                           	bsf	(185/8),(185)&7	;volatile
   561  00AD  1497               	line	28
   562                           	
   563                           l753:	
   564  00AE                     ;main.c: 28:     CCP1M2=0;
   565                           	bcf	(186/8),(186)&7	;volatile
   566  00AE  1117               	line	29
   567                           	
   568                           l755:	
   569  00AF                     ;main.c: 29:     CCP1M3=1;
   570                           	bsf	(187/8),(187)&7	;volatile
   571  00AF  1597               	line	31
   572                           	
   573                           l757:	
   574  00B0                     ;main.c: 31:     GIE=1;
   575                           	bsf	(95/8),(95)&7	;volatile
   576  00B0  178B               	line	32
   577                           	
   578                           l759:	
   579  00B1                     ;main.c: 32:     PEIE=1;
   580                           	bsf	(94/8),(94)&7	;volatile
   581  00B1  170B               	line	33
   582                           	
   583                           l761:	
   584  00B2                     ;main.c: 33:     CCP1IE=1;
   585                           	bsf	status, 5	;RP0=1, select bank1
   586  00B2  1683               	bcf	status, 6	;RP1=0, select bank1
   587  00B3  1303               	bsf	(1122/8)^080h,(1122)&7	;volatile
   588  00B4  150C               	line	34
   589                           ;main.c: 34:     while(1){
   590                           	
   591                           l39:	
   592  00B5                     	line	36
   593                           ;main.c: 36:     }
   594                           	
   595                           l40:	
   596  00B5                     	goto	l39
   597  00B5  28B5               	
   598                           l41:	
   599  00B6                     	line	38
   600                           ;main.c: 37:     return;
   601                           	
   602                           l42:	
   603  00B6                     	global	start
   604                           	ljmp	start
   605  00B6  280A               	opt stack 0
   606                           GLOBAL	__end_of_main
   607                           	__end_of_main:
   608  00B7                     	signat	_main,89
   609                           	global	_ISR
   610                           
   611 ;; *************** function _ISR *****************
   612 ;; Defined at:
   613 ;;		line 40 in file "main.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0, pclath, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   627 ;;      Params:         0       0       0       0
   628 ;;      Locals:         0       0       0       0
   629 ;;      Temps:          5       0       0       0
   630 ;;      Totals:         5       0       0       0
   631 ;;Total ram usage:        5 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    1
   634 ;; This function calls:
   635 ;;		___awmod
   636 ;; This function is called by:
   637 ;;		Interrupt level 1
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   641                           	line	40
   642                           global __ptext1
   643                           __ptext1:	;psect for function _ISR
   644  0071                     psect	text1
   645                           	file	"main.c"
   646                           	line	40
   647                           	global	__size_of_ISR
   648                           	__size_of_ISR	equ	__end_of_ISR-_ISR
   649  002B                     	
   650                           _ISR:	
   651  0071                     ;incstack = 0
   652                           	opt	stack 6
   653                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   654                           psect	intentry,class=CODE,delta=2
   655                           global __pintentry
   656                           __pintentry:
   657  0004                     global interrupt_function
   658                           interrupt_function:
   659  0004                     	global saved_w
   660                           	saved_w	set	btemp+0
   661  007E                     	movwf	saved_w
   662  0004  00FE               	swapf	status,w
   663  0005  0E03               	movwf	(??_ISR+3)
   664  0006  00FA               	movf	pclath,w
   665  0007  080A               	movwf	(??_ISR+4)
   666  0008  00FB               	ljmp	_ISR
   667  0009  2871               psect	text1
   668                           	line	41
   669                           	
   670                           i1l763:	
   671  0071                     ;main.c: 41:     if(CCP1IF&&counter++==9){
   672                           	bcf	status, 5	;RP0=0, select bank0
   673  0071  1283               	bcf	status, 6	;RP1=0, select bank0
   674  0072  1303               	btfss	(98/8),(98)&7	;volatile
   675  0073  1D0C               	goto	u21_21
   676  0074  2876               	goto	u21_20
   677  0075  2877               u21_21:
   678  0076                     	goto	i1l769
   679  0076  2884               u21_20:
   680  0077                     	
   681                           i1l765:	
   682  0077                     	movlw	low(01h)
   683  0077  3001               	movwf	(??_ISR+0)+0
   684  0078  00F7               	movf	(??_ISR+0)+0,w
   685  0079  0877               	addwf	(_counter),f
   686  007A  07FC               		movlw	10
   687  007B  300A               	xorwf	(((_counter))),w
   688  007C  067C               	btfss	status,2
   689  007D  1D03               	goto	u22_21
   690  007E  2880               	goto	u22_20
   691  007F  2881               u22_21:
   692  0080                     	goto	i1l769
   693  0080  2884               u22_20:
   694  0081                     	line	42
   695                           	
   696                           i1l767:	
   697  0081                     ;main.c: 42:         RB6=~RB6;
   698                           	movlw	1<<((54)&7)
   699  0081  3040               	xorwf	((54)/8),f
   700  0082  0686               	goto	i1l769
   701  0083  2884               	line	43
   702                           ;main.c: 43:     }
   703                           	
   704                           i1l47:	
   705  0084                     	line	44
   706                           	
   707                           i1l769:	
   708  0084                     ;main.c: 44:     CCP1IF=0;
   709                           	bcf	(98/8),(98)&7	;volatile
   710  0084  110C               	line	45
   711                           	
   712                           i1l771:	
   713  0085                     ;main.c: 45:     counter%=10;
   714                           	movlw	0Ah
   715  0085  300A               	movwf	(___awmod@divisor)
   716  0086  00F0               	movlw	0
   717  0087  3000               	movwf	((___awmod@divisor))+1
   718  0088  00F1               	movf	(_counter),w
   719  0089  087C               	movwf	(??_ISR+0)+0
   720  008A  00F7               	clrf	(??_ISR+0)+0+1
   721  008B  01F8               	movf	0+(??_ISR+0)+0,w
   722  008C  0877               	movwf	(___awmod@dividend)
   723  008D  00F2               	movf	1+(??_ISR+0)+0,w
   724  008E  0878               	movwf	(___awmod@dividend+1)
   725  008F  00F3               	fcall	___awmod
   726  0090  200E               	movf	(0+(?___awmod)),w
   727  0091  0870               	movwf	(??_ISR+2)+0
   728  0092  00F9               	movf	(??_ISR+2)+0,w
   729  0093  0879               	movwf	(_counter)
   730  0094  00FC               	line	46
   731                           	
   732                           i1l48:	
   733  0095                     	movf	(??_ISR+4),w
   734  0095  087B               	movwf	pclath
   735  0096  008A               	swapf	(??_ISR+3)^0FFFFFF80h,w
   736  0097  0E7A               	movwf	status
   737  0098  0083               	swapf	saved_w,f
   738  0099  0EFE               	swapf	saved_w,w
   739  009A  0E7E               	retfie
   740  009B  0009               	opt stack 0
   741                           GLOBAL	__end_of_ISR
   742                           	__end_of_ISR:
   743  009C                     	signat	_ISR,89
   744                           	global	___awmod
   745                           
   746 ;; *************** function ___awmod *****************
   747 ;; Defined at:
   748 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;  divisor         2    0[COMMON] int 
   751 ;;  dividend        2    2[COMMON] int 
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  sign            1    6[COMMON] unsigned char 
   754 ;;  counter         1    5[COMMON] unsigned char 
   755 ;; Return value:  Size  Location     Type
   756 ;;                  2    0[COMMON] int 
   757 ;; Registers used:
   758 ;;		wreg, status,2, status,0
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   764 ;;      Params:         4       0       0       0
   765 ;;      Locals:         2       0       0       0
   766 ;;      Temps:          1       0       0       0
   767 ;;      Totals:         7       0       0       0
   768 ;;Total ram usage:        7 bytes
   769 ;; Hardware stack levels used:    1
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_ISR
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           psect	text2,local,class=CODE,delta=2,merge=1,group=1
   777                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
   778                           	line	5
   779                           global __ptext2
   780                           __ptext2:	;psect for function ___awmod
   781  000E                     psect	text2
   782                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
   783                           	line	5
   784                           	global	__size_of___awmod
   785                           	__size_of___awmod	equ	__end_of___awmod-___awmod
   786  0063                     	
   787                           ___awmod:	
   788  000E                     ;incstack = 0
   789                           	opt	stack 6
   790                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   791                           	line	12
   792                           	
   793                           i1l697:	
   794  000E                     	clrf	(___awmod@sign)
   795  000E  01F6               	line	13
   796                           	
   797                           i1l699:	
   798  000F                     	btfss	(___awmod@dividend+1),7
   799  000F  1FF3               	goto	u12_21
   800  0010  2812               	goto	u12_20
   801  0011  2813               u12_21:
   802  0012                     	goto	i1l705
   803  0012  281B               u12_20:
   804  0013                     	line	14
   805                           	
   806                           i1l701:	
   807  0013                     	comf	(___awmod@dividend),f
   808  0013  09F2               	comf	(___awmod@dividend+1),f
   809  0014  09F3               	incf	(___awmod@dividend),f
   810  0015  0AF2               	skipnz
   811  0016  1903               	incf	(___awmod@dividend+1),f
   812  0017  0AF3               	line	15
   813                           	
   814                           i1l703:	
   815  0018                     	clrf	(___awmod@sign)
   816  0018  01F6               	incf	(___awmod@sign),f
   817  0019  0AF6               	goto	i1l705
   818  001A  281B               	line	16
   819                           	
   820                           i1l290:	
   821  001B                     	line	17
   822                           	
   823                           i1l705:	
   824  001B                     	btfss	(___awmod@divisor+1),7
   825  001B  1FF1               	goto	u13_21
   826  001C  281E               	goto	u13_20
   827  001D  281F               u13_21:
   828  001E                     	goto	i1l709
   829  001E  2825               u13_20:
   830  001F                     	line	18
   831                           	
   832                           i1l707:	
   833  001F                     	comf	(___awmod@divisor),f
   834  001F  09F0               	comf	(___awmod@divisor+1),f
   835  0020  09F1               	incf	(___awmod@divisor),f
   836  0021  0AF0               	skipnz
   837  0022  1903               	incf	(___awmod@divisor+1),f
   838  0023  0AF1               	goto	i1l709
   839  0024  2825               	
   840                           i1l291:	
   841  0025                     	line	19
   842                           	
   843                           i1l709:	
   844  0025                     	movf	((___awmod@divisor)),w
   845  0025  0870               iorwf	((___awmod@divisor+1)),w
   846  0026  0471               	btfsc	status,2
   847  0027  1903               	goto	u14_21
   848  0028  282A               	goto	u14_20
   849  0029  282B               u14_21:
   850  002A                     	goto	i1l727
   851  002A  2860               u14_20:
   852  002B                     	line	20
   853                           	
   854                           i1l711:	
   855  002B                     	clrf	(___awmod@counter)
   856  002B  01F5               	incf	(___awmod@counter),f
   857  002C  0AF5               	line	21
   858                           	goto	i1l717
   859  002D  283A               	
   860                           i1l294:	
   861  002E                     	line	22
   862                           	
   863                           i1l713:	
   864  002E                     	movlw	01h
   865  002E  3001               	
   866                           u15_25:
   867  002F                     	clrc
   868  002F  1003               	rlf	(___awmod@divisor),f
   869  0030  0DF0               	rlf	(___awmod@divisor+1),f
   870  0031  0DF1               	addlw	-1
   871  0032  3EFF               	skipz
   872  0033  1D03               	goto	u15_25
   873  0034  282F               	line	23
   874                           	
   875                           i1l715:	
   876  0035                     	movlw	low(01h)
   877  0035  3001               	movwf	(??___awmod+0)+0
   878  0036  00F4               	movf	(??___awmod+0)+0,w
   879  0037  0874               	addwf	(___awmod@counter),f
   880  0038  07F5               	goto	i1l717
   881  0039  283A               	line	24
   882                           	
   883                           i1l293:	
   884  003A                     	line	21
   885                           	
   886                           i1l717:	
   887  003A                     	btfss	(___awmod@divisor+1),(15)&7
   888  003A  1FF1               	goto	u16_21
   889  003B  283D               	goto	u16_20
   890  003C  283E               u16_21:
   891  003D                     	goto	i1l713
   892  003D  282E               u16_20:
   893  003E                     	goto	i1l719
   894  003E  2840               	
   895                           i1l295:	
   896  003F                     	goto	i1l719
   897  003F  2840               	line	25
   898                           	
   899                           i1l296:	
   900  0040                     	line	26
   901                           	
   902                           i1l719:	
   903  0040                     	movf	(___awmod@divisor+1),w
   904  0040  0871               	subwf	(___awmod@dividend+1),w
   905  0041  0273               	skipz
   906  0042  1D03               	goto	u17_25
   907  0043  2846               	movf	(___awmod@divisor),w
   908  0044  0870               	subwf	(___awmod@dividend),w
   909  0045  0272               u17_25:
   910  0046                     	skipc
   911  0046  1C03               	goto	u17_21
   912  0047  2849               	goto	u17_20
   913  0048  284A               u17_21:
   914  0049                     	goto	i1l723
   915  0049  2851               u17_20:
   916  004A                     	line	27
   917                           	
   918                           i1l721:	
   919  004A                     	movf	(___awmod@divisor),w
   920  004A  0870               	subwf	(___awmod@dividend),f
   921  004B  02F2               	movf	(___awmod@divisor+1),w
   922  004C  0871               	skipc
   923  004D  1C03               	decf	(___awmod@dividend+1),f
   924  004E  03F3               	subwf	(___awmod@dividend+1),f
   925  004F  02F3               	goto	i1l723
   926  0050  2851               	
   927                           i1l297:	
   928  0051                     	line	28
   929                           	
   930                           i1l723:	
   931  0051                     	movlw	01h
   932  0051  3001               	
   933                           u18_25:
   934  0052                     	clrc
   935  0052  1003               	rrf	(___awmod@divisor+1),f
   936  0053  0CF1               	rrf	(___awmod@divisor),f
   937  0054  0CF0               	addlw	-1
   938  0055  3EFF               	skipz
   939  0056  1D03               	goto	u18_25
   940  0057  2852               	line	29
   941                           	
   942                           i1l725:	
   943  0058                     	movlw	01h
   944  0058  3001               	subwf	(___awmod@counter),f
   945  0059  02F5               	btfss	status,2
   946  005A  1D03               	goto	u19_21
   947  005B  285D               	goto	u19_20
   948  005C  285E               u19_21:
   949  005D                     	goto	i1l719
   950  005D  2840               u19_20:
   951  005E                     	goto	i1l727
   952  005E  2860               	
   953                           i1l298:	
   954  005F                     	goto	i1l727
   955  005F  2860               	line	30
   956                           	
   957                           i1l292:	
   958  0060                     	line	31
   959                           	
   960                           i1l727:	
   961  0060                     	movf	((___awmod@sign)),w
   962  0060  0876               	btfsc	status,2
   963  0061  1903               	goto	u20_21
   964  0062  2864               	goto	u20_20
   965  0063  2865               u20_21:
   966  0064                     	goto	i1l731
   967  0064  286B               u20_20:
   968  0065                     	line	32
   969                           	
   970                           i1l729:	
   971  0065                     	comf	(___awmod@dividend),f
   972  0065  09F2               	comf	(___awmod@dividend+1),f
   973  0066  09F3               	incf	(___awmod@dividend),f
   974  0067  0AF2               	skipnz
   975  0068  1903               	incf	(___awmod@dividend+1),f
   976  0069  0AF3               	goto	i1l731
   977  006A  286B               	
   978                           i1l299:	
   979  006B                     	line	33
   980                           	
   981                           i1l731:	
   982  006B                     	movf	(___awmod@dividend+1),w
   983  006B  0873               	movwf	(?___awmod+1)
   984  006C  00F1               	movf	(___awmod@dividend),w
   985  006D  0872               	movwf	(?___awmod)
   986  006E  00F0               	goto	i1l300
   987  006F  2870               	
   988                           i1l733:	
   989  0070                     	line	34
   990                           	
   991                           i1l300:	
   992  0070                     	return
   993  0070  0008               	opt stack 0
   994                           GLOBAL	__end_of___awmod
   995                           	__end_of___awmod:
   996  0071                     	signat	___awmod,8314
   997                           global	___latbits
   998                           ___latbits	equ	0
   999  0000                     	global	btemp
  1000                           	btemp set 07Eh
  1001  007E                     
  1002                           	DABS	1,126,2	;btemp
  1003                           	global	wtemp0
  1004                           	wtemp0 set btemp+0
  1005  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  5     5      0     448
                                              7 COMMON     5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       D      10        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Apr 21 07:08:54 2023

            __CFG_CP$OFF 0000                       l40 00B5                       l41 00B6  
                     l42 00B6                       l39 00B5                      l741 00A5  
                    l751 00AD                      l743 00A6                      l735 009C  
                    l761 00B2                      l753 00AE                      l745 00A7  
                    l737 00A2                      l755 00AF                      l747 00A8  
                    l739 00A4                      l757 00B0                      l749 00AC  
                    l759 00B1                      _GIE 005F                      _RB6 0036  
           __CFG_CPD$OFF 0000                      _ISR 0071             ___awmod@sign 0076  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   _PEIE 005E                     i1l47 0084                     i1l48 0095  
                   _TMR1 000E                     _main 009C                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 000A                    ??_ISR 0077  
                  ?_main 0070                    _CCPR1 0015            __CFG_WDTE$OFF 0000  
        __end_of___awmod 0071                    i1l300 0070                    i1l290 001B  
                  i1l291 0025                    i1l292 0060                    i1l293 003A  
                  i1l701 0013                    i1l294 002E                    i1l295 003F  
                  i1l711 002B                    i1l703 0018                    i1l296 0040  
                  i1l297 0051                    i1l721 004A                    i1l713 002E  
                  i1l705 001B                    i1l298 005F                    i1l299 006B  
                  i1l731 006B                    i1l723 0051                    i1l715 0035  
                  i1l707 001F                    i1l733 0070                    i1l725 0058  
                  i1l717 003A                    i1l709 0025                    i1l719 0040  
                  i1l727 0060                    i1l729 0065                    i1l771 0085  
                  i1l763 0071                    i1l765 0077                    i1l767 0081  
                  i1l697 000E                    i1l769 0084                    i1l699 000F  
                  u20_20 0065                    u12_20 0013                    u20_21 0064  
                  u12_21 0012                    u13_20 001F                    u21_20 0077  
                  u13_21 001E                    u21_21 0076                    u14_20 002B  
                  u22_20 0081                    u14_21 002A                    u22_21 0080  
                  u15_25 002F                    u16_20 003E                    u16_21 003D  
                  u17_20 004A                    u17_21 0049                    u17_25 0046  
                  u18_25 0052                    u19_20 005E                    u19_21 005D  
          __CFG_PWRTE$ON 0000                    pclath 000A                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 000B  
           __end_of_main 00B7                   ??_main 0000                   _CCP1M0 00B8  
                 _CCP1M1 00B9                   _CCP1M2 00BA                   _CCP1M3 00BB  
                 _CCP1IE 0462                   _CCP1IF 0062                   _TMR1CS 0081  
                 _TMR1ON 0080                   _TRISB6 0436                ??___awmod 0074  
        ___awmod@divisor 0070          ___awmod@counter 0075                   saved_w 007E  
__end_of__initialization 000C           __pcstackCOMMON 0070               __pmaintext 009C  
             __pintentry 0004                  _T1CKPS0 0084                  _T1CKPS1 0085  
                ___awmod 000E                  __ptext1 0071                  __ptext2 000E  
           __size_of_ISR 002B                  _counter 007C         ___awmod@dividend 0072  
   end_of_initialization 000C      start_initialization 000B              __end_of_ISR 009C  
            __pbssCOMMON 007C                ___latbits 0000            __pcstackBANK0 0000  
               ?___awmod 0070        interrupt_function 0004         __size_of___awmod 0063  
          __size_of_main 001B                 intlevel1 0000  
