

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Apr 07 17:22:13 2023

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F628A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   116                           TMR2 equ 011h ;# 
   117  0011                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   118                           T2CON equ 012h ;# 
   119  0012                     # 605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   120                           CCPR1 equ 015h ;# 
   121  0015                     # 612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   122                           CCPR1L equ 015h ;# 
   123  0015                     # 619 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   124                           CCPR1H equ 016h ;# 
   125  0016                     # 626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   126                           CCP1CON equ 017h ;# 
   127  0017                     # 684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   128                           RCSTA equ 018h ;# 
   129  0018                     # 755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   130                           TXREG equ 019h ;# 
   131  0019                     # 762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   132                           RCREG equ 01Ah ;# 
   133  001A                     # 769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   134                           CMCON equ 01Fh ;# 
   135  001F                     # 839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   136                           OPTION_REG equ 081h ;# 
   137  0081                     # 909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   138                           TRISA equ 085h ;# 
   139  0085                     # 971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   140                           TRISB equ 086h ;# 
   141  0086                     # 1033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   142                           PIE1 equ 08Ch ;# 
   143  008C                     # 1090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   144                           PCON equ 08Eh ;# 
   145  008E                     # 1139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   146                           PR2 equ 092h ;# 
   147  0092                     # 1146 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   148                           TXSTA equ 098h ;# 
   149  0098                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   150                           SPBRG equ 099h ;# 
   151  0099                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   152                           EEDATA equ 09Ah ;# 
   153  009A                     # 1217 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   154                           EEADR equ 09Bh ;# 
   155  009B                     # 1224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   156                           EECON1 equ 09Ch ;# 
   157  009C                     # 1262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   158                           EECON2 equ 09Dh ;# 
   159  009D                     # 1269 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   160                           VRCON equ 09Fh ;# 
   161  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   162                           INDF equ 00h ;# 
   163  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   164                           TMR0 equ 01h ;# 
   165  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   166                           PCL equ 02h ;# 
   167  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   168                           STATUS equ 03h ;# 
   169  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   170                           FSR equ 04h ;# 
   171  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   172                           PORTA equ 05h ;# 
   173  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   174                           PORTB equ 06h ;# 
   175  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   176                           PCLATH equ 0Ah ;# 
   177  000A                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   178                           INTCON equ 0Bh ;# 
   179  000B                     # 390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   180                           PIR1 equ 0Ch ;# 
   181  000C                     # 447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   182                           TMR1 equ 0Eh ;# 
   183  000E                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   184                           TMR1L equ 0Eh ;# 
   185  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   186                           TMR1H equ 0Fh ;# 
   187  000F                     # 468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   188                           T1CON equ 010h ;# 
   189  0010                     # 527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   190                           TMR2 equ 011h ;# 
   191  0011                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   192                           T2CON equ 012h ;# 
   193  0012                     # 605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   194                           CCPR1 equ 015h ;# 
   195  0015                     # 612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   196                           CCPR1L equ 015h ;# 
   197  0015                     # 619 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   198                           CCPR1H equ 016h ;# 
   199  0016                     # 626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   200                           CCP1CON equ 017h ;# 
   201  0017                     # 684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   202                           RCSTA equ 018h ;# 
   203  0018                     # 755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   204                           TXREG equ 019h ;# 
   205  0019                     # 762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   206                           RCREG equ 01Ah ;# 
   207  001A                     # 769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   208                           CMCON equ 01Fh ;# 
   209  001F                     # 839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   210                           OPTION_REG equ 081h ;# 
   211  0081                     # 909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   212                           TRISA equ 085h ;# 
   213  0085                     # 971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   214                           TRISB equ 086h ;# 
   215  0086                     # 1033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   216                           PIE1 equ 08Ch ;# 
   217  008C                     # 1090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   218                           PCON equ 08Eh ;# 
   219  008E                     # 1139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   220                           PR2 equ 092h ;# 
   221  0092                     # 1146 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   222                           TXSTA equ 098h ;# 
   223  0098                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   224                           SPBRG equ 099h ;# 
   225  0099                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   226                           EEDATA equ 09Ah ;# 
   227  009A                     # 1217 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   228                           EEADR equ 09Bh ;# 
   229  009B                     # 1224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   230                           EECON1 equ 09Ch ;# 
   231  009C                     # 1262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   232                           EECON2 equ 09Dh ;# 
   233  009D                     # 1269 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   234                           VRCON equ 09Fh ;# 
   235  009F                     	FNCALL	_main,___awmod
   236                           	FNROOT	_main
   237                           	global	main@F470
   238                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   239                           global __pidataBANK0
   240                           __pidataBANK0:
   241  0730                     	file	"main.c"
   242                           	line	13
   243                           
   244                           ;initializer for main@F470
   245                           	retlw	07Eh
   246  0730  347E               	retlw	0Ch
   247  0731  340C               	retlw	0B6h
   248  0732  34B6               	retlw	09Eh
   249  0733  349E               	retlw	0CCh
   250  0734  34CC               	retlw	0DAh
   251  0735  34DA               	retlw	0BEh
   252  0736  34BE               	retlw	0Eh
   253  0737  340E               	retlw	0FEh
   254  0738  34FE               	retlw	0DEh
   255  0739  34DE               	global	_PORTB
   256                           _PORTB	set	0x6
   257  0006                     	global	_TRISB
   258                           _TRISB	set	0x86
   259  0086                     ; #config settings
   260                           global __CFG_FOSC$XT
   261                           __CFG_FOSC$XT equ 0x0
   262  0000                     global __CFG_WDTE$OFF
   263                           __CFG_WDTE$OFF equ 0x0
   264  0000                     global __CFG_PWRTE$ON
   265                           __CFG_PWRTE$ON equ 0x0
   266  0000                     global __CFG_MCLRE$OFF
   267                           __CFG_MCLRE$OFF equ 0x0
   268  0000                     global __CFG_BOREN$ON
   269                           __CFG_BOREN$ON equ 0x0
   270  0000                     global __CFG_LVP$OFF
   271                           __CFG_LVP$OFF equ 0x0
   272  0000                     global __CFG_CPD$OFF
   273                           __CFG_CPD$OFF equ 0x0
   274  0000                     global __CFG_CP$OFF
   275                           __CFG_CP$OFF equ 0x0
   276  0000                     	file	"C:\Users\Mostafa\AppData\Local\Temp\sirs."
   277                           	line	#
   278                           psect cinit,class=CODE,delta=2
   279                           global start_initialization
   280                           start_initialization:
   281  07EA                     
   282                           global __initialization
   283                           __initialization:
   284  07EA                     psect	dataBANK0,class=BANK0,space=1,noexec
   285                           global __pdataBANK0
   286                           __pdataBANK0:
   287  002B                     	file	"main.c"
   288                           	line	13
   289                           main@F470:
   290  002B                            ds      10
   291  002B                     
   292                           	file	"C:\Users\Mostafa\AppData\Local\Temp\sirs."
   293                           	line	#
   294                           ; Initialize objects allocated to BANK0
   295                           	global __pidataBANK0
   296                           psect cinit,class=CODE,delta=2,merge=1
   297                           	fcall	__pidataBANK0+0		;fetch initializer
   298  07EA  2730               	movwf	__pdataBANK0+0&07fh		
   299  07EB  00AB               	fcall	__pidataBANK0+1		;fetch initializer
   300  07EC  2731               	movwf	__pdataBANK0+1&07fh		
   301  07ED  00AC               	fcall	__pidataBANK0+2		;fetch initializer
   302  07EE  2732               	movwf	__pdataBANK0+2&07fh		
   303  07EF  00AD               	fcall	__pidataBANK0+3		;fetch initializer
   304  07F0  2733               	movwf	__pdataBANK0+3&07fh		
   305  07F1  00AE               	fcall	__pidataBANK0+4		;fetch initializer
   306  07F2  2734               	movwf	__pdataBANK0+4&07fh		
   307  07F3  00AF               	fcall	__pidataBANK0+5		;fetch initializer
   308  07F4  2735               	movwf	__pdataBANK0+5&07fh		
   309  07F5  00B0               	fcall	__pidataBANK0+6		;fetch initializer
   310  07F6  2736               	movwf	__pdataBANK0+6&07fh		
   311  07F7  00B1               	fcall	__pidataBANK0+7		;fetch initializer
   312  07F8  2737               	movwf	__pdataBANK0+7&07fh		
   313  07F9  00B2               	fcall	__pidataBANK0+8		;fetch initializer
   314  07FA  2738               	movwf	__pdataBANK0+8&07fh		
   315  07FB  00B3               	fcall	__pidataBANK0+9		;fetch initializer
   316  07FC  2739               	movwf	__pdataBANK0+9&07fh		
   317  07FD  00B4               psect cinit,class=CODE,delta=2,merge=1
   318                           global end_of_initialization,__end_of__initialization
   319                           
   320                           ;End of C runtime variable initialization code
   321                           
   322                           end_of_initialization:
   323  07FE                     __end_of__initialization:
   324  07FE                     clrf status
   325  07FE  0183               ljmp _main	;jump to C main() function
   326  07FF  2F3A               psect	cstackCOMMON,class=COMMON,space=1,noexec
   327                           global __pcstackCOMMON
   328                           __pcstackCOMMON:
   329  0070                     ?_main:	; 1 bytes @ 0x0
   330  0070                     	global	?___awmod
   331                           ?___awmod:	; 2 bytes @ 0x0
   332  0070                     	global	___awmod@divisor
   333                           ___awmod@divisor:	; 2 bytes @ 0x0
   334  0070                     	ds	2
   335  0070                     	global	___awmod@dividend
   336                           ___awmod@dividend:	; 2 bytes @ 0x2
   337  0072                     	ds	2
   338  0072                     ??___awmod:	; 1 bytes @ 0x4
   339  0074                     	ds	1
   340  0074                     	global	___awmod@counter
   341                           ___awmod@counter:	; 1 bytes @ 0x5
   342  0075                     	ds	1
   343  0075                     	global	___awmod@sign
   344                           ___awmod@sign:	; 1 bytes @ 0x6
   345  0076                     	ds	1
   346  0076                     ??_main:	; 1 bytes @ 0x7
   347  0077                     	ds	4
   348  0077                     psect	cstackBANK0,class=BANK0,space=1,noexec
   349                           global __pcstackBANK0
   350                           __pcstackBANK0:
   351  0020                     	global	main@segment
   352                           main@segment:	; 10 bytes @ 0x0
   353  0020                     	ds	10
   354  0020                     	global	main@counter
   355                           main@counter:	; 1 bytes @ 0xA
   356  002A                     	ds	1
   357  002A                     ;!
   358                           ;!Data Sizes:
   359                           ;!    Strings     0
   360                           ;!    Constant    0
   361                           ;!    Data        10
   362                           ;!    BSS         0
   363                           ;!    Persistent  0
   364                           ;!    Stack       0
   365                           ;!
   366                           ;!Auto Spaces:
   367                           ;!    Space          Size  Autos    Used
   368                           ;!    COMMON           14     11      11
   369                           ;!    BANK0            80     11      21
   370                           ;!    BANK1            80      0       0
   371                           ;!    BANK2            48      0       0
   372                           
   373                           ;!
   374                           ;!Pointer List with Targets:
   375                           ;!
   376                           ;!    None.
   377                           
   378                           
   379                           ;!
   380                           ;!Critical Paths under _main in COMMON
   381                           ;!
   382                           ;!    _main->___awmod
   383                           ;!
   384                           ;!Critical Paths under _main in BANK0
   385                           ;!
   386                           ;!    None.
   387                           ;!
   388                           ;!Critical Paths under _main in BANK1
   389                           ;!
   390                           ;!    None.
   391                           ;!
   392                           ;!Critical Paths under _main in BANK2
   393                           ;!
   394                           ;!    None.
   395                           
   396 ;;
   397 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   398 ;;
   399                           
   400                           ;!
   401                           ;!Call Graph Tables:
   402                           ;!
   403                           ;! ---------------------------------------------------------------------------------
   404                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   405                           ;! ---------------------------------------------------------------------------------
   406                           ;! (0) _main                                                15    15      0     519
   407                           ;!                                              7 COMMON     4     4      0
   408                           ;!                                              0 BANK0     11    11      0
   409                           ;!                            ___awmod
   410                           ;! ---------------------------------------------------------------------------------
   411                           ;! (1) ___awmod                                              7     3      4     448
   412                           ;!                                              0 COMMON     7     3      4
   413                           ;! ---------------------------------------------------------------------------------
   414                           ;! Estimated maximum stack depth 1
   415                           ;! ---------------------------------------------------------------------------------
   416                           ;!
   417                           ;! Call Graph Graphs:
   418                           ;!
   419                           ;! _main (ROOT)
   420                           ;!   ___awmod
   421                           ;!
   422                           
   423                           ;! Address spaces:
   424                           
   425                           ;!Name               Size   Autos  Total    Cost      Usage
   426                           ;!SFR3                 0      0       0       4        0.0%
   427                           ;!BITSFR3              0      0       0       4        0.0%
   428                           ;!BANK2               30      0       0       9        0.0%
   429                           ;!BITBANK2            30      0       0       8        0.0%
   430                           ;!SFR2                 0      0       0       5        0.0%
   431                           ;!BITSFR2              0      0       0       5        0.0%
   432                           ;!BANK1               50      0       0       7        0.0%
   433                           ;!BITBANK1            50      0       0       6        0.0%
   434                           ;!SFR1                 0      0       0       2        0.0%
   435                           ;!BITSFR1              0      0       0       2        0.0%
   436                           ;!BANK0               50      B      15       3       26.3%
   437                           ;!BITBANK0            50      0       0       5        0.0%
   438                           ;!SFR0                 0      0       0       1        0.0%
   439                           ;!BITSFR0              0      0       0       1        0.0%
   440                           ;!COMMON               E      B       B       1       78.6%
   441                           ;!BITCOMMON            E      0       0       0        0.0%
   442                           ;!CODE                 0      0       0       0        0.0%
   443                           ;!DATA                 0      0      20      10        0.0%
   444                           ;!ABS                  0      0      20       4        0.0%
   445                           ;!NULL                 0      0       0       0        0.0%
   446                           ;!STACK                0      0       0       2        0.0%
   447                           ;!EEDATA              80      0       0       0        0.0%
   448                           
   449                           	global	_main
   450                           
   451 ;; *************** function _main *****************
   452 ;; Defined at:
   453 ;;		line 13 in file "main.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;  segment        10    0[BANK0 ] unsigned char [10]
   458 ;;  counter         1   10[BANK0 ] unsigned char 
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : B00/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   468 ;;      Params:         0       0       0       0
   469 ;;      Locals:         0      11       0       0
   470 ;;      Temps:          4       0       0       0
   471 ;;      Totals:         4      11       0       0
   472 ;;Total ram usage:       15 bytes
   473 ;; Hardware stack levels required when called:    1
   474 ;; This function calls:
   475 ;;		___awmod
   476 ;; This function is called by:
   477 ;;		Startup code after reset
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   481                           	file	"main.c"
   482                           	line	13
   483                           global __pmaintext
   484                           __pmaintext:	;psect for function _main
   485  073A                     psect	maintext
   486                           	file	"main.c"
   487                           	line	13
   488                           	global	__size_of_main
   489                           	__size_of_main	equ	__end_of_main-_main
   490  004D                     	
   491                           _main:	
   492  073A                     ;incstack = 0
   493                           	opt	stack 7
   494                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   495                           	line	15
   496                           	
   497                           l681:	
   498  073A                     ;main.c: 15:     unsigned char segment[]={0b01111110,0b00001100,0b10110110,0b10011110,0b
                                 11001100,0b11011010,0b10111110,0b00001110,0b11111110,0b11011110},counter=0;
   499                           	movlw	(main@segment)&0ffh
   500  073A  3020               	movwf	fsr0
   501  073B  0084               	movlw	low(main@F470)
   502  073C  302B               	movwf	(??_main+0)+0
   503  073D  00F7               	movf	fsr0,w
   504  073E  0804               	movwf	((??_main+0)+0+1)
   505  073F  00F8               	movlw	10
   506  0740  300A               	movwf	((??_main+0)+0+2)
   507  0741  00F9               u200:
   508  0742                     	movf	(??_main+0)+0,w
   509  0742  0877               	movwf	fsr0
   510  0743  0084               	bcf	status, 7	;select IRP bank0
   511  0744  1383               	
   512                           	movf	indf,w
   513  0745  0800               	movwf	((??_main+0)+0+3)
   514  0746  00FA               	incf	(??_main+0)+0,f
   515  0747  0AF7               	movf	((??_main+0)+0+1),w
   516  0748  0878               	movwf	fsr0
   517  0749  0084               	
   518                           	movf	((??_main+0)+0+3),w
   519  074A  087A               	movwf	indf
   520  074B  0080               	incf	((??_main+0)+0+1),f
   521  074C  0AF8               	decfsz	((??_main+0)+0+2),f
   522  074D  0BF9               	goto	u200
   523  074E  2F42               	
   524                           	
   525                           l683:	
   526  074F                     	bcf	status, 5	;RP0=0, select bank0
   527  074F  1283               	bcf	status, 6	;RP1=0, select bank0
   528  0750  1303               	clrf	(main@counter)
   529  0751  01AA               	line	16
   530                           	
   531                           l685:	
   532  0752                     ;main.c: 16:     TRISB=0x00;
   533                           	bsf	status, 5	;RP0=1, select bank1
   534  0752  1683               	bcf	status, 6	;RP1=0, select bank1
   535  0753  1303               	clrf	(134)^080h	;volatile
   536  0754  0186               	line	17
   537                           	
   538                           l687:	
   539  0755                     ;main.c: 17:     PORTB=0x00;
   540                           	bcf	status, 5	;RP0=0, select bank0
   541  0755  1283               	bcf	status, 6	;RP1=0, select bank0
   542  0756  1303               	clrf	(6)	;volatile
   543  0757  0186               	goto	l689
   544  0758  2F59               	line	18
   545                           ;main.c: 18:     while(1){
   546                           	
   547                           l13:	
   548  0759                     	line	19
   549                           	
   550                           l689:	
   551  0759                     ;main.c: 19:        PORTB=segment[counter++];
   552                           	bcf	status, 5	;RP0=0, select bank0
   553  0759  1283               	bcf	status, 6	;RP1=0, select bank0
   554  075A  1303               	movf	(main@counter),w
   555  075B  082A               	addlw	low(main@segment|((0x0)<<8))&0ffh
   556  075C  3E20               	movwf	fsr0
   557  075D  0084               	bcf	status, 7	;select IRP bank0
   558  075E  1383               	movf	indf,w
   559  075F  0800               	movwf	(6)	;volatile
   560  0760  0086               	
   561                           l691:	
   562  0761                     	movlw	low(01h)
   563  0761  3001               	movwf	(??_main+0)+0
   564  0762  00F7               	movf	(??_main+0)+0,w
   565  0763  0877               	addwf	(main@counter),f
   566  0764  07AA               	line	20
   567                           	
   568                           l693:	
   569  0765                     ;main.c: 20:        counter=counter%10;
   570                           	movlw	0Ah
   571  0765  300A               	movwf	(___awmod@divisor)
   572  0766  00F0               	movlw	0
   573  0767  3000               	movwf	((___awmod@divisor))+1
   574  0768  00F1               	movf	(main@counter),w
   575  0769  082A               	movwf	(??_main+0)+0
   576  076A  00F7               	clrf	(??_main+0)+0+1
   577  076B  01F8               	movf	0+(??_main+0)+0,w
   578  076C  0877               	movwf	(___awmod@dividend)
   579  076D  00F2               	movf	1+(??_main+0)+0,w
   580  076E  0878               	movwf	(___awmod@dividend+1)
   581  076F  00F3               	fcall	___awmod
   582  0770  2787               	movf	(0+(?___awmod)),w
   583  0771  0870               	movwf	(??_main+2)+0
   584  0772  00F9               	movf	(??_main+2)+0,w
   585  0773  0879               	bcf	status, 5	;RP0=0, select bank0
   586  0774  1283               	bcf	status, 6	;RP1=0, select bank0
   587  0775  1303               	movwf	(main@counter)
   588  0776  00AA               	line	21
   589                           	
   590                           l695:	
   591  0777                     ;main.c: 21:        _delay((unsigned long)((1000)*(4000000/4000.0)));
   592                           	opt asmopt_push
   593                           opt asmopt_off
   594                           movlw  6
   595  0777  3006               movwf	((??_main+0)+0+2),f
   596  0778  00F9               movlw	19
   597  0779  3013               movwf	((??_main+0)+0+1),f
   598  077A  00F8               	movlw	173
   599  077B  30AD               movwf	((??_main+0)+0),f
   600  077C  00F7               	u217:
   601  077D                     decfsz	((??_main+0)+0),f
   602  077D  0BF7               	goto	u217
   603  077E  2F7D               	decfsz	((??_main+0)+0+1),f
   604  077F  0BF8               	goto	u217
   605  0780  2F7D               	decfsz	((??_main+0)+0+2),f
   606  0781  0BF9               	goto	u217
   607  0782  2F7D               	nop2
   608  0783  2F84               opt asmopt_pop
   609                           
   610                           	goto	l689
   611  0784  2F59               	line	22
   612                           ;main.c: 22:     }
   613                           	
   614                           l14:	
   615  0785                     	goto	l689
   616  0785  2F59               	
   617                           l15:	
   618  0786                     	line	24
   619                           ;main.c: 23:     return;
   620                           	
   621                           l16:	
   622  0786                     	global	start
   623                           	ljmp	start
   624  0786  2800               	opt stack 0
   625                           GLOBAL	__end_of_main
   626                           	__end_of_main:
   627  0787                     	signat	_main,89
   628                           	global	___awmod
   629                           
   630 ;; *************** function ___awmod *****************
   631 ;; Defined at:
   632 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  divisor         2    0[COMMON] int 
   635 ;;  dividend        2    2[COMMON] int 
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  sign            1    6[COMMON] unsigned char 
   638 ;;  counter         1    5[COMMON] unsigned char 
   639 ;; Return value:  Size  Location     Type
   640 ;;                  2    0[COMMON] int 
   641 ;; Registers used:
   642 ;;		wreg, status,2, status,0
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   648 ;;      Params:         4       0       0       0
   649 ;;      Locals:         2       0       0       0
   650 ;;      Temps:          1       0       0       0
   651 ;;      Totals:         7       0       0       0
   652 ;;Total ram usage:        7 bytes
   653 ;; Hardware stack levels used:    1
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           psect	text1,local,class=CODE,delta=2,merge=1,group=1
   661                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
   662                           	line	5
   663                           global __ptext1
   664                           __ptext1:	;psect for function ___awmod
   665  0787                     psect	text1
   666                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
   667                           	line	5
   668                           	global	__size_of___awmod
   669                           	__size_of___awmod	equ	__end_of___awmod-___awmod
   670  0063                     	
   671                           ___awmod:	
   672  0787                     ;incstack = 0
   673                           	opt	stack 7
   674                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   675                           	line	12
   676                           	
   677                           l643:	
   678  0787                     	clrf	(___awmod@sign)
   679  0787  01F6               	line	13
   680                           	
   681                           l645:	
   682  0788                     	btfss	(___awmod@dividend+1),7
   683  0788  1FF3               	goto	u111
   684  0789  2F8B               	goto	u110
   685  078A  2F8C               u111:
   686  078B                     	goto	l651
   687  078B  2F94               u110:
   688  078C                     	line	14
   689                           	
   690                           l647:	
   691  078C                     	comf	(___awmod@dividend),f
   692  078C  09F2               	comf	(___awmod@dividend+1),f
   693  078D  09F3               	incf	(___awmod@dividend),f
   694  078E  0AF2               	skipnz
   695  078F  1903               	incf	(___awmod@dividend+1),f
   696  0790  0AF3               	line	15
   697                           	
   698                           l649:	
   699  0791                     	clrf	(___awmod@sign)
   700  0791  01F6               	incf	(___awmod@sign),f
   701  0792  0AF6               	goto	l651
   702  0793  2F94               	line	16
   703                           	
   704                           l258:	
   705  0794                     	line	17
   706                           	
   707                           l651:	
   708  0794                     	btfss	(___awmod@divisor+1),7
   709  0794  1FF1               	goto	u121
   710  0795  2F97               	goto	u120
   711  0796  2F98               u121:
   712  0797                     	goto	l655
   713  0797  2F9E               u120:
   714  0798                     	line	18
   715                           	
   716                           l653:	
   717  0798                     	comf	(___awmod@divisor),f
   718  0798  09F0               	comf	(___awmod@divisor+1),f
   719  0799  09F1               	incf	(___awmod@divisor),f
   720  079A  0AF0               	skipnz
   721  079B  1903               	incf	(___awmod@divisor+1),f
   722  079C  0AF1               	goto	l655
   723  079D  2F9E               	
   724                           l259:	
   725  079E                     	line	19
   726                           	
   727                           l655:	
   728  079E                     	movf	((___awmod@divisor)),w
   729  079E  0870               iorwf	((___awmod@divisor+1)),w
   730  079F  0471               	btfsc	status,2
   731  07A0  1903               	goto	u131
   732  07A1  2FA3               	goto	u130
   733  07A2  2FA4               u131:
   734  07A3                     	goto	l673
   735  07A3  2FD9               u130:
   736  07A4                     	line	20
   737                           	
   738                           l657:	
   739  07A4                     	clrf	(___awmod@counter)
   740  07A4  01F5               	incf	(___awmod@counter),f
   741  07A5  0AF5               	line	21
   742                           	goto	l663
   743  07A6  2FB3               	
   744                           l262:	
   745  07A7                     	line	22
   746                           	
   747                           l659:	
   748  07A7                     	movlw	01h
   749  07A7  3001               	
   750                           u145:
   751  07A8                     	clrc
   752  07A8  1003               	rlf	(___awmod@divisor),f
   753  07A9  0DF0               	rlf	(___awmod@divisor+1),f
   754  07AA  0DF1               	addlw	-1
   755  07AB  3EFF               	skipz
   756  07AC  1D03               	goto	u145
   757  07AD  2FA8               	line	23
   758                           	
   759                           l661:	
   760  07AE                     	movlw	low(01h)
   761  07AE  3001               	movwf	(??___awmod+0)+0
   762  07AF  00F4               	movf	(??___awmod+0)+0,w
   763  07B0  0874               	addwf	(___awmod@counter),f
   764  07B1  07F5               	goto	l663
   765  07B2  2FB3               	line	24
   766                           	
   767                           l261:	
   768  07B3                     	line	21
   769                           	
   770                           l663:	
   771  07B3                     	btfss	(___awmod@divisor+1),(15)&7
   772  07B3  1FF1               	goto	u151
   773  07B4  2FB6               	goto	u150
   774  07B5  2FB7               u151:
   775  07B6                     	goto	l659
   776  07B6  2FA7               u150:
   777  07B7                     	goto	l665
   778  07B7  2FB9               	
   779                           l263:	
   780  07B8                     	goto	l665
   781  07B8  2FB9               	line	25
   782                           	
   783                           l264:	
   784  07B9                     	line	26
   785                           	
   786                           l665:	
   787  07B9                     	movf	(___awmod@divisor+1),w
   788  07B9  0871               	subwf	(___awmod@dividend+1),w
   789  07BA  0273               	skipz
   790  07BB  1D03               	goto	u165
   791  07BC  2FBF               	movf	(___awmod@divisor),w
   792  07BD  0870               	subwf	(___awmod@dividend),w
   793  07BE  0272               u165:
   794  07BF                     	skipc
   795  07BF  1C03               	goto	u161
   796  07C0  2FC2               	goto	u160
   797  07C1  2FC3               u161:
   798  07C2                     	goto	l669
   799  07C2  2FCA               u160:
   800  07C3                     	line	27
   801                           	
   802                           l667:	
   803  07C3                     	movf	(___awmod@divisor),w
   804  07C3  0870               	subwf	(___awmod@dividend),f
   805  07C4  02F2               	movf	(___awmod@divisor+1),w
   806  07C5  0871               	skipc
   807  07C6  1C03               	decf	(___awmod@dividend+1),f
   808  07C7  03F3               	subwf	(___awmod@dividend+1),f
   809  07C8  02F3               	goto	l669
   810  07C9  2FCA               	
   811                           l265:	
   812  07CA                     	line	28
   813                           	
   814                           l669:	
   815  07CA                     	movlw	01h
   816  07CA  3001               	
   817                           u175:
   818  07CB                     	clrc
   819  07CB  1003               	rrf	(___awmod@divisor+1),f
   820  07CC  0CF1               	rrf	(___awmod@divisor),f
   821  07CD  0CF0               	addlw	-1
   822  07CE  3EFF               	skipz
   823  07CF  1D03               	goto	u175
   824  07D0  2FCB               	line	29
   825                           	
   826                           l671:	
   827  07D1                     	movlw	01h
   828  07D1  3001               	subwf	(___awmod@counter),f
   829  07D2  02F5               	btfss	status,2
   830  07D3  1D03               	goto	u181
   831  07D4  2FD6               	goto	u180
   832  07D5  2FD7               u181:
   833  07D6                     	goto	l665
   834  07D6  2FB9               u180:
   835  07D7                     	goto	l673
   836  07D7  2FD9               	
   837                           l266:	
   838  07D8                     	goto	l673
   839  07D8  2FD9               	line	30
   840                           	
   841                           l260:	
   842  07D9                     	line	31
   843                           	
   844                           l673:	
   845  07D9                     	movf	((___awmod@sign)),w
   846  07D9  0876               	btfsc	status,2
   847  07DA  1903               	goto	u191
   848  07DB  2FDD               	goto	u190
   849  07DC  2FDE               u191:
   850  07DD                     	goto	l677
   851  07DD  2FE4               u190:
   852  07DE                     	line	32
   853                           	
   854                           l675:	
   855  07DE                     	comf	(___awmod@dividend),f
   856  07DE  09F2               	comf	(___awmod@dividend+1),f
   857  07DF  09F3               	incf	(___awmod@dividend),f
   858  07E0  0AF2               	skipnz
   859  07E1  1903               	incf	(___awmod@dividend+1),f
   860  07E2  0AF3               	goto	l677
   861  07E3  2FE4               	
   862                           l267:	
   863  07E4                     	line	33
   864                           	
   865                           l677:	
   866  07E4                     	movf	(___awmod@dividend+1),w
   867  07E4  0873               	movwf	(?___awmod+1)
   868  07E5  00F1               	movf	(___awmod@dividend),w
   869  07E6  0872               	movwf	(?___awmod)
   870  07E7  00F0               	goto	l268
   871  07E8  2FE9               	
   872                           l679:	
   873  07E9                     	line	34
   874                           	
   875                           l268:	
   876  07E9                     	return
   877  07E9  0008               	opt stack 0
   878                           GLOBAL	__end_of___awmod
   879                           	__end_of___awmod:
   880  07EA                     	signat	___awmod,8314
   881                           global	___latbits
   882                           ___latbits	equ	0
   883  0000                     	global	btemp
   884                           	btemp set 07Eh
   885  007E                     
   886                           	DABS	1,126,2	;btemp
   887                           	global	wtemp0
   888                           	wtemp0 set btemp+0
   889  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     11      21
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0     519
                                              7 COMMON     4     4      0
                                              0 BANK0     11    11      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      15       3       26.3%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      10        0.0%
ABS                  0      0      20       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Apr 07 17:22:13 2023

            __CFG_CP$OFF 0000                       l13 0759                       l14 0785  
                     l15 0786                       l16 0786                      l260 07D9  
                    l261 07B3                      l262 07A7                      l263 07B8  
                    l264 07B9                      l265 07CA                      l266 07D8  
                    l258 0794                      l267 07E4                      l259 079E  
                    l268 07E9                      l651 0794                      l643 0787  
                    l661 07AE                      l653 0798                      l645 0788  
                    l671 07D1                      l663 07B3                      l655 079E  
                    l647 078C                      l665 07B9                      l657 07A4  
                    l673 07D9                      l649 0791                      l681 073A  
                    l675 07DE                      l667 07C3                      l659 07A7  
                    l691 0761                      l683 074F                      l677 07E4  
                    l669 07CA                      l693 0765                      l685 0752  
                    l679 07E9                      l695 0777                      l687 0755  
                    l689 0759                      u110 078C                      u111 078B  
                    u120 0798                      u200 0742                      u121 0797  
                    u130 07A4                      u131 07A3                      u150 07B7  
                    u151 07B6                      u160 07C3                      u161 07C2  
                    u145 07A8                      u217 077D                      u180 07D7  
                    u181 07D6                      u165 07BF                      u190 07DE  
                    u191 07DD                      u175 07CB             __CFG_CPD$OFF 0000  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000              main@counter 002A  
            main@segment 0020                     _main 073A                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000          __end_of___awmod 07EA                    _PORTB 0006  
                  _TRISB 0086            __CFG_PWRTE$ON 0000                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 07EA  
           __end_of_main 0787                   ??_main 0077                ??___awmod 0074  
        ___awmod@divisor 0070          ___awmod@counter 0075  __end_of__initialization 07FE  
         __pcstackCOMMON 0070             __pidataBANK0 0730               __pmaintext 073A  
                ___awmod 0787                  __ptext1 0787         ___awmod@dividend 0072  
   end_of_initialization 07FE      start_initialization 07EA              __pdataBANK0 002B  
              ___latbits 0000            __pcstackBANK0 0020                 ?___awmod 0070  
       __size_of___awmod 0063            __size_of_main 004D                 main@F470 002B  
