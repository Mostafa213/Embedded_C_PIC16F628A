

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Apr 25 01:55:25 2023

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F628A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   116                           TMR2 equ 011h ;# 
   117  0011                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   118                           T2CON equ 012h ;# 
   119  0012                     # 605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   120                           CCPR1 equ 015h ;# 
   121  0015                     # 612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   122                           CCPR1L equ 015h ;# 
   123  0015                     # 619 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   124                           CCPR1H equ 016h ;# 
   125  0016                     # 626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   126                           CCP1CON equ 017h ;# 
   127  0017                     # 684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   128                           RCSTA equ 018h ;# 
   129  0018                     # 755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   130                           TXREG equ 019h ;# 
   131  0019                     # 762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   132                           RCREG equ 01Ah ;# 
   133  001A                     # 769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   134                           CMCON equ 01Fh ;# 
   135  001F                     # 839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   136                           OPTION_REG equ 081h ;# 
   137  0081                     # 909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   138                           TRISA equ 085h ;# 
   139  0085                     # 971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   140                           TRISB equ 086h ;# 
   141  0086                     # 1033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   142                           PIE1 equ 08Ch ;# 
   143  008C                     # 1090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   144                           PCON equ 08Eh ;# 
   145  008E                     # 1139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   146                           PR2 equ 092h ;# 
   147  0092                     # 1146 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   148                           TXSTA equ 098h ;# 
   149  0098                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   150                           SPBRG equ 099h ;# 
   151  0099                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   152                           EEDATA equ 09Ah ;# 
   153  009A                     # 1217 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   154                           EEADR equ 09Bh ;# 
   155  009B                     # 1224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   156                           EECON1 equ 09Ch ;# 
   157  009C                     # 1262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   158                           EECON2 equ 09Dh ;# 
   159  009D                     # 1269 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   160                           VRCON equ 09Fh ;# 
   161  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   162                           INDF equ 00h ;# 
   163  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   164                           TMR0 equ 01h ;# 
   165  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   166                           PCL equ 02h ;# 
   167  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   168                           STATUS equ 03h ;# 
   169  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   170                           FSR equ 04h ;# 
   171  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   172                           PORTA equ 05h ;# 
   173  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   174                           PORTB equ 06h ;# 
   175  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   176                           PCLATH equ 0Ah ;# 
   177  000A                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   178                           INTCON equ 0Bh ;# 
   179  000B                     # 390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   180                           PIR1 equ 0Ch ;# 
   181  000C                     # 447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   182                           TMR1 equ 0Eh ;# 
   183  000E                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   184                           TMR1L equ 0Eh ;# 
   185  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   186                           TMR1H equ 0Fh ;# 
   187  000F                     # 468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   188                           T1CON equ 010h ;# 
   189  0010                     # 527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   190                           TMR2 equ 011h ;# 
   191  0011                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   192                           T2CON equ 012h ;# 
   193  0012                     # 605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   194                           CCPR1 equ 015h ;# 
   195  0015                     # 612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   196                           CCPR1L equ 015h ;# 
   197  0015                     # 619 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   198                           CCPR1H equ 016h ;# 
   199  0016                     # 626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   200                           CCP1CON equ 017h ;# 
   201  0017                     # 684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   202                           RCSTA equ 018h ;# 
   203  0018                     # 755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   204                           TXREG equ 019h ;# 
   205  0019                     # 762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   206                           RCREG equ 01Ah ;# 
   207  001A                     # 769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   208                           CMCON equ 01Fh ;# 
   209  001F                     # 839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   210                           OPTION_REG equ 081h ;# 
   211  0081                     # 909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   212                           TRISA equ 085h ;# 
   213  0085                     # 971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   214                           TRISB equ 086h ;# 
   215  0086                     # 1033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   216                           PIE1 equ 08Ch ;# 
   217  008C                     # 1090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   218                           PCON equ 08Eh ;# 
   219  008E                     # 1139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   220                           PR2 equ 092h ;# 
   221  0092                     # 1146 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   222                           TXSTA equ 098h ;# 
   223  0098                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   224                           SPBRG equ 099h ;# 
   225  0099                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   226                           EEDATA equ 09Ah ;# 
   227  009A                     # 1217 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   228                           EEADR equ 09Bh ;# 
   229  009B                     # 1224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   230                           EECON1 equ 09Ch ;# 
   231  009C                     # 1262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   232                           EECON2 equ 09Dh ;# 
   233  009D                     # 1269 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f628a.h"
   234                           VRCON equ 09Fh ;# 
   235  009F                     	FNCALL	_main,_TX_Sender_Init
   236                           	FNCALL	_main,_UART_Write
   237                           	FNROOT	_main
   238                           	global	_TXREG
   239                           _TXREG	set	0x19
   240  0019                     	global	_PORTA
   241                           _PORTA	set	0x5
   242  0005                     	global	_SPEN
   243                           _SPEN	set	0xC7
   244  00C7                     	global	_RB4
   245                           _RB4	set	0x34
   246  0034                     	global	_RB3
   247                           _RB3	set	0x33
   248  0033                     	global	_RB0
   249                           _RB0	set	0x30
   250  0030                     	global	_SPBRG
   251                           _SPBRG	set	0x99
   252  0099                     	global	_TRISB
   253                           _TRISB	set	0x86
   254  0086                     	global	_TRISA
   255                           _TRISA	set	0x85
   256  0085                     	global	_TRMT
   257                           _TRMT	set	0x4C1
   258  04C1                     	global	_TXEN
   259                           _TXEN	set	0x4C5
   260  04C5                     	global	_TRISB2
   261                           _TRISB2	set	0x432
   262  0432                     	global	_TRISB1
   263                           _TRISB1	set	0x431
   264  0431                     	global	_SYNC
   265                           _SYNC	set	0x4C4
   266  04C4                     	global	_BRGH
   267                           _BRGH	set	0x4C2
   268  04C2                     ; #config settings
   269                           global __CFG_FOSC$INTOSCIO
   270                           __CFG_FOSC$INTOSCIO equ 0x0
   271  0000                     global __CFG_WDTE$OFF
   272                           __CFG_WDTE$OFF equ 0x0
   273  0000                     global __CFG_PWRTE$OFF
   274                           __CFG_PWRTE$OFF equ 0x0
   275  0000                     global __CFG_MCLRE$OFF
   276                           __CFG_MCLRE$OFF equ 0x0
   277  0000                     global __CFG_BOREN$OFF
   278                           __CFG_BOREN$OFF equ 0x0
   279  0000                     global __CFG_LVP$OFF
   280                           __CFG_LVP$OFF equ 0x0
   281  0000                     global __CFG_CPD$OFF
   282                           __CFG_CPD$OFF equ 0x0
   283  0000                     global __CFG_CP$OFF
   284                           __CFG_CP$OFF equ 0x0
   285  0000                     	file	"C:\Users\Mostafa\AppData\Local\Temp\sb68."
   286                           	line	#
   287                           psect cinit,class=CODE,delta=2
   288                           global start_initialization
   289                           start_initialization:
   290  07FE                     
   291                           global __initialization
   292                           __initialization:
   293  07FE                     psect cinit,class=CODE,delta=2,merge=1
   294                           global end_of_initialization,__end_of__initialization
   295                           
   296                           ;End of C runtime variable initialization code
   297                           
   298                           end_of_initialization:
   299  07FE                     __end_of__initialization:
   300  07FE                     clrf status
   301  07FE  0183               ljmp _main	;jump to C main() function
   302  07FF  2FA5               psect	cstackCOMMON,class=COMMON,space=1,noexec
   303                           global __pcstackCOMMON
   304                           __pcstackCOMMON:
   305  0070                     ?_TX_Sender_Init:	; 1 bytes @ 0x0
   306  0070                     ??_TX_Sender_Init:	; 1 bytes @ 0x0
   307  0070                     ?_UART_Write:	; 1 bytes @ 0x0
   308  0070                     ??_UART_Write:	; 1 bytes @ 0x0
   309  0070                     ?_main:	; 1 bytes @ 0x0
   310  0070                     	global	UART_Write@data
   311                           UART_Write@data:	; 1 bytes @ 0x0
   312  0070                     	ds	1
   313  0070                     ??_main:	; 1 bytes @ 0x1
   314  0071                     	ds	3
   315  0071                     	global	main@Data
   316                           main@Data:	; 1 bytes @ 0x4
   317  0074                     	ds	1
   318  0074                     ;!
   319                           ;!Data Sizes:
   320                           ;!    Strings     0
   321                           ;!    Constant    0
   322                           ;!    Data        0
   323                           ;!    BSS         0
   324                           ;!    Persistent  0
   325                           ;!    Stack       0
   326                           ;!
   327                           ;!Auto Spaces:
   328                           ;!    Space          Size  Autos    Used
   329                           ;!    COMMON           14      5       5
   330                           ;!    BANK0            80      0       0
   331                           ;!    BANK1            80      0       0
   332                           ;!    BANK2            48      0       0
   333                           
   334                           ;!
   335                           ;!Pointer List with Targets:
   336                           ;!
   337                           ;!    None.
   338                           
   339                           
   340                           ;!
   341                           ;!Critical Paths under _main in COMMON
   342                           ;!
   343                           ;!    _main->_UART_Write
   344                           ;!
   345                           ;!Critical Paths under _main in BANK0
   346                           ;!
   347                           ;!    None.
   348                           ;!
   349                           ;!Critical Paths under _main in BANK1
   350                           ;!
   351                           ;!    None.
   352                           ;!
   353                           ;!Critical Paths under _main in BANK2
   354                           ;!
   355                           ;!    None.
   356                           
   357 ;;
   358 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   359 ;;
   360                           
   361                           ;!
   362                           ;!Call Graph Tables:
   363                           ;!
   364                           ;! ---------------------------------------------------------------------------------
   365                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   366                           ;! ---------------------------------------------------------------------------------
   367                           ;! (0) _main                                                 4     4      0      45
   368                           ;!                                              1 COMMON     4     4      0
   369                           ;!                     _TX_Sender_Init
   370                           ;!                         _UART_Write
   371                           ;! ---------------------------------------------------------------------------------
   372                           ;! (1) _UART_Write                                           1     1      0      15
   373                           ;!                                              0 COMMON     1     1      0
   374                           ;! ---------------------------------------------------------------------------------
   375                           ;! (1) _TX_Sender_Init                                       0     0      0       0
   376                           ;! ---------------------------------------------------------------------------------
   377                           ;! Estimated maximum stack depth 1
   378                           ;! ---------------------------------------------------------------------------------
   379                           ;!
   380                           ;! Call Graph Graphs:
   381                           ;!
   382                           ;! _main (ROOT)
   383                           ;!   _TX_Sender_Init
   384                           ;!   _UART_Write
   385                           ;!
   386                           
   387                           ;! Address spaces:
   388                           
   389                           ;!Name               Size   Autos  Total    Cost      Usage
   390                           ;!BITCOMMON            E      0       0       0        0.0%
   391                           ;!EEDATA              80      0       0       0        0.0%
   392                           ;!NULL                 0      0       0       0        0.0%
   393                           ;!CODE                 0      0       0       0        0.0%
   394                           ;!COMMON               E      5       5       1       35.7%
   395                           ;!BITSFR0              0      0       0       1        0.0%
   396                           ;!SFR0                 0      0       0       1        0.0%
   397                           ;!BITSFR1              0      0       0       2        0.0%
   398                           ;!SFR1                 0      0       0       2        0.0%
   399                           ;!STACK                0      0       0       2        0.0%
   400                           ;!BANK0               50      0       0       3        0.0%
   401                           ;!BITSFR3              0      0       0       4        0.0%
   402                           ;!SFR3                 0      0       0       4        0.0%
   403                           ;!ABS                  0      0       0       4        0.0%
   404                           ;!BITBANK0            50      0       0       5        0.0%
   405                           ;!BITSFR2              0      0       0       5        0.0%
   406                           ;!SFR2                 0      0       0       5        0.0%
   407                           ;!BITBANK1            50      0       0       6        0.0%
   408                           ;!BANK1               50      0       0       7        0.0%
   409                           ;!BITBANK2            30      0       0       8        0.0%
   410                           ;!BANK2               30      0       0       9        0.0%
   411                           ;!DATA                 0      0       0      10        0.0%
   412                           
   413                           	global	_main
   414                           
   415 ;; *************** function _main *****************
   416 ;; Defined at:
   417 ;;		line 21 in file "main.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;		None
   420 ;; Auto vars:     Size  Location     Type
   421 ;;  Data            1    4[COMMON] unsigned char 
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      void 
   424 ;; Registers used:
   425 ;;		wreg, status,2, status,0, pclath, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : B00/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   431 ;;      Params:         0       0       0       0
   432 ;;      Locals:         1       0       0       0
   433 ;;      Temps:          3       0       0       0
   434 ;;      Totals:         4       0       0       0
   435 ;;Total ram usage:        4 bytes
   436 ;; Hardware stack levels required when called:    1
   437 ;; This function calls:
   438 ;;		_TX_Sender_Init
   439 ;;		_UART_Write
   440 ;; This function is called by:
   441 ;;		Startup code after reset
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   445                           	file	"main.c"
   446                           	line	21
   447                           global __pmaintext
   448                           __pmaintext:	;psect for function _main
   449  07A5                     psect	maintext
   450                           	file	"main.c"
   451                           	line	21
   452                           	global	__size_of_main
   453                           	__size_of_main	equ	__end_of_main-_main
   454  0059                     	
   455                           _main:	
   456  07A5                     ;incstack = 0
   457                           	opt	stack 7
   458                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   459                           	line	22
   460                           	
   461                           l647:	
   462  07A5                     ;main.c: 22:     TX_Sender_Init();
   463                           	fcall	_TX_Sender_Init
   464  07A5  2796               	line	23
   465                           	
   466                           l649:	
   467  07A6                     ;main.c: 23:     TRISA&=0b00000000;
   468                           	bsf	status, 5	;RP0=1, select bank1
   469  07A6  1683               	bcf	status, 6	;RP1=0, select bank1
   470  07A7  1303               	clrf	(133)^080h	;volatile
   471  07A8  0185               	line	24
   472                           	
   473                           l651:	
   474  07A9                     ;main.c: 24:     PORTA=0x00;
   475                           	bcf	status, 5	;RP0=0, select bank0
   476  07A9  1283               	bcf	status, 6	;RP1=0, select bank0
   477  07AA  1303               	clrf	(5)	;volatile
   478  07AB  0185               	line	26
   479                           	
   480                           l653:	
   481  07AC                     ;main.c: 26:     TRISB|=0b00011001;
   482                           	movlw	low(019h)
   483  07AC  3019               	movwf	(??_main+0)+0
   484  07AD  00F1               	movf	(??_main+0)+0,w
   485  07AE  0871               	bsf	status, 5	;RP0=1, select bank1
   486  07AF  1683               	bcf	status, 6	;RP1=0, select bank1
   487  07B0  1303               	iorwf	(134)^080h,f	;volatile
   488  07B1  0486               	line	27
   489                           	
   490                           l655:	
   491  07B2                     ;main.c: 27:     uint8_t Data = 0;
   492                           	clrf	(main@Data)
   493  07B2  01F4               	goto	l657
   494  07B3  2FB4               	line	28
   495                           ;main.c: 28:     while(1){
   496                           	
   497                           l41:	
   498  07B4                     	line	29
   499                           	
   500                           l657:	
   501  07B4                     ;main.c: 29:         if(RB0){
   502                           	bcf	status, 5	;RP0=0, select bank0
   503  07B4  1283               	btfss	(48/8),(48)&7	;volatile
   504  07B5  1C06               	goto	u21
   505  07B6  2FB8               	goto	u20
   506  07B7  2FB9               u21:
   507  07B8                     	goto	l663
   508  07B8  2FCB               u20:
   509  07B9                     	line	30
   510                           	
   511                           l659:	
   512  07B9                     ;main.c: 30:             Data++;
   513                           	movlw	low(01h)
   514  07B9  3001               	movwf	(??_main+0)+0
   515  07BA  00F1               	movf	(??_main+0)+0,w
   516  07BB  0871               	addwf	(main@Data),f
   517  07BC  07F4               	line	31
   518                           	
   519                           l661:	
   520  07BD                     ;main.c: 31:             _delay((unsigned long)((250)*(4000000/4000.0)));
   521                           	opt asmopt_push
   522                           opt asmopt_off
   523                           movlw  2
   524  07BD  3002               movwf	((??_main+0)+0+2),f
   525  07BE  00F3               movlw	69
   526  07BF  3045               movwf	((??_main+0)+0+1),f
   527  07C0  00F2               	movlw	169
   528  07C1  30A9               movwf	((??_main+0)+0),f
   529  07C2  00F1               	u57:
   530  07C3                     decfsz	((??_main+0)+0),f
   531  07C3  0BF1               	goto	u57
   532  07C4  2FC3               	decfsz	((??_main+0)+0+1),f
   533  07C5  0BF2               	goto	u57
   534  07C6  2FC3               	decfsz	((??_main+0)+0+2),f
   535  07C7  0BF3               	goto	u57
   536  07C8  2FC3               	nop2
   537  07C9  2FCA               opt asmopt_pop
   538                           
   539                           	goto	l663
   540  07CA  2FCB               	line	32
   541                           ;main.c: 32:         }
   542                           	
   543                           l42:	
   544  07CB                     	line	33
   545                           	
   546                           l663:	
   547  07CB                     ;main.c: 33:         if(RB3){
   548                           	bcf	status, 5	;RP0=0, select bank0
   549  07CB  1283               	bcf	status, 6	;RP1=0, select bank0
   550  07CC  1303               	btfss	(51/8),(51)&7	;volatile
   551  07CD  1D86               	goto	u31
   552  07CE  2FD0               	goto	u30
   553  07CF  2FD1               u31:
   554  07D0                     	goto	l669
   555  07D0  2FE1               u30:
   556  07D1                     	line	34
   557                           	
   558                           l665:	
   559  07D1                     ;main.c: 34:             Data--;
   560                           	movlw	01h
   561  07D1  3001               	subwf	(main@Data),f
   562  07D2  02F4               	line	35
   563                           	
   564                           l667:	
   565  07D3                     ;main.c: 35:             _delay((unsigned long)((250)*(4000000/4000.0)));
   566                           	opt asmopt_push
   567                           opt asmopt_off
   568                           movlw  2
   569  07D3  3002               movwf	((??_main+0)+0+2),f
   570  07D4  00F3               movlw	69
   571  07D5  3045               movwf	((??_main+0)+0+1),f
   572  07D6  00F2               	movlw	169
   573  07D7  30A9               movwf	((??_main+0)+0),f
   574  07D8  00F1               	u67:
   575  07D9                     decfsz	((??_main+0)+0),f
   576  07D9  0BF1               	goto	u67
   577  07DA  2FD9               	decfsz	((??_main+0)+0+1),f
   578  07DB  0BF2               	goto	u67
   579  07DC  2FD9               	decfsz	((??_main+0)+0+2),f
   580  07DD  0BF3               	goto	u67
   581  07DE  2FD9               	nop2
   582  07DF  2FE0               opt asmopt_pop
   583                           
   584                           	goto	l669
   585  07E0  2FE1               	line	36
   586                           ;main.c: 36:         }
   587                           	
   588                           l43:	
   589  07E1                     	line	40
   590                           	
   591                           l669:	
   592  07E1                     ;main.c: 40:         if(RB4){
   593                           	bcf	status, 5	;RP0=0, select bank0
   594  07E1  1283               	bcf	status, 6	;RP1=0, select bank0
   595  07E2  1303               	btfss	(52/8),(52)&7	;volatile
   596  07E3  1E06               	goto	u41
   597  07E4  2FE6               	goto	u40
   598  07E5  2FE7               u41:
   599  07E6                     	goto	l675
   600  07E6  2FF7               u40:
   601  07E7                     	line	41
   602                           	
   603                           l671:	
   604  07E7                     ;main.c: 41:             UART_Write(Data);
   605                           	movf	(main@Data),w
   606  07E7  0874               	fcall	_UART_Write
   607  07E8  2788               	line	42
   608                           	
   609                           l673:	
   610  07E9                     ;main.c: 42:             _delay((unsigned long)((250)*(4000000/4000.0)));
   611                           	opt asmopt_push
   612                           opt asmopt_off
   613                           movlw  2
   614  07E9  3002               movwf	((??_main+0)+0+2),f
   615  07EA  00F3               movlw	69
   616  07EB  3045               movwf	((??_main+0)+0+1),f
   617  07EC  00F2               	movlw	169
   618  07ED  30A9               movwf	((??_main+0)+0),f
   619  07EE  00F1               	u77:
   620  07EF                     decfsz	((??_main+0)+0),f
   621  07EF  0BF1               	goto	u77
   622  07F0  2FEF               	decfsz	((??_main+0)+0+1),f
   623  07F1  0BF2               	goto	u77
   624  07F2  2FEF               	decfsz	((??_main+0)+0+2),f
   625  07F3  0BF3               	goto	u77
   626  07F4  2FEF               	nop2
   627  07F5  2FF6               opt asmopt_pop
   628                           
   629                           	goto	l675
   630  07F6  2FF7               	line	43
   631                           ;main.c: 43:         }
   632                           	
   633                           l44:	
   634  07F7                     	line	44
   635                           	
   636                           l675:	
   637  07F7                     ;main.c: 44:         PORTA = Data;
   638                           	movf	(main@Data),w
   639  07F7  0874               	bcf	status, 5	;RP0=0, select bank0
   640  07F8  1283               	bcf	status, 6	;RP1=0, select bank0
   641  07F9  1303               	movwf	(5)	;volatile
   642  07FA  0085               	goto	l657
   643  07FB  2FB4               	line	45
   644                           ;main.c: 45:     }
   645                           	
   646                           l45:	
   647  07FC                     	goto	l657
   648  07FC  2FB4               	
   649                           l46:	
   650  07FD                     	line	47
   651                           ;main.c: 46:     return;
   652                           	
   653                           l47:	
   654  07FD                     	global	start
   655                           	ljmp	start
   656  07FD  2800               	opt stack 0
   657                           GLOBAL	__end_of_main
   658                           	__end_of_main:
   659  07FE                     	signat	_main,89
   660                           	global	_UART_Write
   661                           
   662 ;; *************** function _UART_Write *****************
   663 ;; Defined at:
   664 ;;		line 59 in file "main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  data            1    wreg     unsigned char 
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  data            1    0[COMMON] unsigned char 
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   678 ;;      Params:         0       0       0       0
   679 ;;      Locals:         1       0       0       0
   680 ;;      Temps:          0       0       0       0
   681 ;;      Totals:         1       0       0       0
   682 ;;Total ram usage:        1 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		_main
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   691                           	line	59
   692                           global __ptext1
   693                           __ptext1:	;psect for function _UART_Write
   694  0788                     psect	text1
   695                           	file	"main.c"
   696                           	line	59
   697                           	global	__size_of_UART_Write
   698                           	__size_of_UART_Write	equ	__end_of_UART_Write-_UART_Write
   699  000E                     	
   700                           _UART_Write:	
   701  0788                     ;incstack = 0
   702                           	opt	stack 7
   703                           ; Regs used in _UART_Write: [wreg]
   704                           ;UART_Write@data stored from wreg
   705                           	movwf	(UART_Write@data)
   706  0788  00F0               	line	60
   707                           	
   708                           l643:	
   709  0789                     ;main.c: 60:     while(!TRMT);
   710                           	goto	l53
   711  0789  2F8A               	
   712                           l54:	
   713  078A                     	
   714                           l53:	
   715  078A                     	bsf	status, 5	;RP0=1, select bank1
   716  078A  1683               	bcf	status, 6	;RP1=0, select bank1
   717  078B  1303               	btfss	(1217/8)^080h,(1217)&7	;volatile
   718  078C  1C98               	goto	u11
   719  078D  2F8F               	goto	u10
   720  078E  2F90               u11:
   721  078F                     	goto	l53
   722  078F  2F8A               u10:
   723  0790                     	goto	l645
   724  0790  2F91               	
   725                           l55:	
   726  0791                     	line	61
   727                           	
   728                           l645:	
   729  0791                     ;main.c: 61:     TXREG = data;
   730                           	movf	(UART_Write@data),w
   731  0791  0870               	bcf	status, 5	;RP0=0, select bank0
   732  0792  1283               	bcf	status, 6	;RP1=0, select bank0
   733  0793  1303               	movwf	(25)	;volatile
   734  0794  0099               	line	62
   735                           	
   736                           l56:	
   737  0795                     	return
   738  0795  0008               	opt stack 0
   739                           GLOBAL	__end_of_UART_Write
   740                           	__end_of_UART_Write:
   741  0796                     	signat	_UART_Write,4217
   742                           	global	_TX_Sender_Init
   743                           
   744 ;; *************** function _TX_Sender_Init *****************
   745 ;; Defined at:
   746 ;;		line 49 in file "main.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   760 ;;      Params:         0       0       0       0
   761 ;;      Locals:         0       0       0       0
   762 ;;      Temps:          0       0       0       0
   763 ;;      Totals:         0       0       0       0
   764 ;;Total ram usage:        0 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; This function calls:
   767 ;;		Nothing
   768 ;; This function is called by:
   769 ;;		_main
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
   773                           	line	49
   774                           global __ptext2
   775                           __ptext2:	;psect for function _TX_Sender_Init
   776  0796                     psect	text2
   777                           	file	"main.c"
   778                           	line	49
   779                           	global	__size_of_TX_Sender_Init
   780                           	__size_of_TX_Sender_Init	equ	__end_of_TX_Sender_Init-_TX_Sender_Init
   781  000F                     	
   782                           _TX_Sender_Init:	
   783  0796                     ;incstack = 0
   784                           	opt	stack 7
   785                           ; Regs used in _TX_Sender_Init: [wreg]
   786                           	line	50
   787                           	
   788                           l629:	
   789  0796                     ;main.c: 50:     BRGH = 1;
   790                           	bsf	status, 5	;RP0=1, select bank1
   791  0796  1683               	bcf	status, 6	;RP1=0, select bank1
   792  0797  1303               	bsf	(1218/8)^080h,(1218)&7	;volatile
   793  0798  1518               	line	51
   794                           	
   795                           l631:	
   796  0799                     ;main.c: 51:     SPBRG = 25;
   797                           	movlw	low(019h)
   798  0799  3019               	movwf	(153)^080h	;volatile
   799  079A  0099               	line	52
   800                           	
   801                           l633:	
   802  079B                     ;main.c: 52:     SYNC = 0;
   803                           	bcf	(1220/8)^080h,(1220)&7	;volatile
   804  079B  1218               	line	53
   805                           	
   806                           l635:	
   807  079C                     ;main.c: 53:     SPEN = 1;
   808                           	bcf	status, 5	;RP0=0, select bank0
   809  079C  1283               	bcf	status, 6	;RP1=0, select bank0
   810  079D  1303               	bsf	(199/8),(199)&7	;volatile
   811  079E  1798               	line	54
   812                           	
   813                           l637:	
   814  079F                     ;main.c: 54:     TRISB1=1;
   815                           	bsf	status, 5	;RP0=1, select bank1
   816  079F  1683               	bcf	status, 6	;RP1=0, select bank1
   817  07A0  1303               	bsf	(1073/8)^080h,(1073)&7	;volatile
   818  07A1  1486               	line	55
   819                           	
   820                           l639:	
   821  07A2                     ;main.c: 55:     TRISB2=1;
   822                           	bsf	(1074/8)^080h,(1074)&7	;volatile
   823  07A2  1506               	line	56
   824                           	
   825                           l641:	
   826  07A3                     ;main.c: 56:     TXEN=1;
   827                           	bsf	(1221/8)^080h,(1221)&7	;volatile
   828  07A3  1698               	line	57
   829                           	
   830                           l50:	
   831  07A4                     	return
   832  07A4  0008               	opt stack 0
   833                           GLOBAL	__end_of_TX_Sender_Init
   834                           	__end_of_TX_Sender_Init:
   835  07A5                     	signat	_TX_Sender_Init,89
   836                           global	___latbits
   837                           ___latbits	equ	0
   838  0000                     	global	btemp
   839                           	btemp set 07Eh
   840  007E                     
   841                           	DABS	1,126,2	;btemp
   842                           	global	wtemp0
   843                           	wtemp0 set btemp+0
   844  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              1 COMMON     4     4      0
                     _TX_Sender_Init
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TX_Sender_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TX_Sender_Init
   _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Apr 25 01:55:25 2023

            __CFG_CP$OFF 0000                       l41 07B4                       l50 07A4  
                     l42 07CB                       l43 07E1                       l44 07F7  
                     l53 078A                       l45 07FC                       l54 078A  
                     l46 07FD                       l55 0791                       l47 07FD  
                     l56 0795                       u10 0790                       u11 078F  
                     u20 07B9                       u21 07B8                       u30 07D1  
                     u31 07D0                       u40 07E7                       u41 07E6  
                     u57 07C3                       u67 07D9                       u77 07EF  
                    l631 0799                      l641 07A3                      l633 079B  
                    l635 079C                      l643 0789                      l651 07A9  
                    l637 079F                      l629 0796                      l645 0791  
                    l661 07BD                      l653 07AC                      l639 07A2  
                    l671 07E7                      l663 07CB                      l655 07B2  
                    l647 07A5                      l673 07E9                      l665 07D1  
                    l657 07B4                      l649 07A6                      l675 07F7  
                    l667 07D3                      l659 07B9                      l669 07E1  
                    _RB0 0030                      _RB3 0033                      _RB4 0034  
           __CFG_CPD$OFF 0000             __CFG_LVP$OFF 0000                     _BRGH 04C2  
                   _SPEN 00C7                     _TRMT 04C1                     _TXEN 04C5  
                   _SYNC 04C4                     _main 07A5                     btemp 007E  
                   start 0000                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _SPBRG 0099                    _PORTA 0005                    _TRISA 0085  
                  _TRISB 0086                    _TXREG 0019              ?_UART_Write 0070  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 007E  
         __CFG_MCLRE$OFF 0000          __initialization 07FE             __end_of_main 07FE  
                 ??_main 0071                   _TRISB1 0431                   _TRISB2 0432  
         __CFG_PWRTE$OFF 0000      __size_of_UART_Write 000E  __size_of_TX_Sender_Init 000F  
__end_of__initialization 07FE           __pcstackCOMMON 0070               __pmaintext 07A5  
           ??_UART_Write 0070       __end_of_UART_Write 0796                  __ptext1 0788  
                __ptext2 0796           _TX_Sender_Init 0796     end_of_initialization 07FE  
         UART_Write@data 0070   __end_of_TX_Sender_Init 07A5          ?_TX_Sender_Init 0070  
    start_initialization 07FE                ___latbits 0000         ??_TX_Sender_Init 0070  
          __size_of_main 0059                 main@Data 0074               _UART_Write 0788  
     __CFG_FOSC$INTOSCIO 0000  
